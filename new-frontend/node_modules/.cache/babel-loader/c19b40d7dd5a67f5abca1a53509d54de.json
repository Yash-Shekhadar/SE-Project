{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar aCallable = require('../internals/a-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar speciesConstructor = require('../internals/species-constructor');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.union` method\n// https://github.com/tc39/proposal-set-methods\n\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  union: function union(iterable) {\n    var set = anObject(this);\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);\n    iterate(iterable, aCallable(newSet.add), {\n      that: newSet\n    });\n    return newSet;\n  }\n});","map":{"version":3,"sources":["E:/UFL/SE-Project/new-frontend/node_modules/core-js/modules/esnext.set.union.js"],"names":["$","require","IS_PURE","getBuiltIn","aCallable","anObject","speciesConstructor","iterate","target","proto","real","forced","union","iterable","set","newSet","add","that"],"mappings":"AAAA;;AACA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,kCAAD,CAAhC;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAD,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAET;AAAlD,CAAD,EAA8D;AAC7DU,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,QAAf,EAAyB;AAC9B,QAAIC,GAAG,GAAGT,QAAQ,CAAC,IAAD,CAAlB;AACA,QAAIU,MAAM,GAAG,KAAKT,kBAAkB,CAACQ,GAAD,EAAMX,UAAU,CAAC,KAAD,CAAhB,CAAvB,EAAiDW,GAAjD,CAAb;AACAP,IAAAA,OAAO,CAACM,QAAD,EAAWT,SAAS,CAACW,MAAM,CAACC,GAAR,CAApB,EAAkC;AAAEC,MAAAA,IAAI,EAAEF;AAAR,KAAlC,CAAP;AACA,WAAOA,MAAP;AACD;AAN4D,CAA9D,CAAD","sourcesContent":["'use strict';\r\nvar $ = require('../internals/export');\r\nvar IS_PURE = require('../internals/is-pure');\r\nvar getBuiltIn = require('../internals/get-built-in');\r\nvar aCallable = require('../internals/a-callable');\r\nvar anObject = require('../internals/an-object');\r\nvar speciesConstructor = require('../internals/species-constructor');\r\nvar iterate = require('../internals/iterate');\r\n\r\n// `Set.prototype.union` method\r\n// https://github.com/tc39/proposal-set-methods\r\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\r\n  union: function union(iterable) {\r\n    var set = anObject(this);\r\n    var newSet = new (speciesConstructor(set, getBuiltIn('Set')))(set);\r\n    iterate(iterable, aCallable(newSet.add), { that: newSet });\r\n    return newSet;\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}