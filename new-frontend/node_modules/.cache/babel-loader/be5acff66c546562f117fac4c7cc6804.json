{"ast":null,"code":"var _jsxFileName = \"D:\\\\University of Florida\\\\Spring 22\\\\Software Engineering\\\\project\\\\SE-Project\\\\new-frontend\\\\src\\\\components\\\\AppSidebarNav.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { CBadge } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nexport const AppSidebarNav = _ref => {\n  _s();\n\n  let {\n    items\n  } = _ref;\n  const location = useLocation();\n\n  const navLink = (name, icon, badge) => {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [icon && icon, name && name, badge && /*#__PURE__*/_jsxDEV(CBadge, {\n        color: badge.color,\n        className: \"ms-auto\",\n        children: badge.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  };\n\n  const navItem = (item, index) => {\n    const {\n      component,\n      name,\n      badge,\n      icon,\n      ...rest\n    } = item;\n    const Component = component;\n    return /*#__PURE__*/_createElement(Component, { ...(rest.to && !rest.items && {\n        component: NavLink,\n        activeClassName: 'active'\n      }),\n      key: index,\n      ...rest,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, navLink(name, icon, badge));\n  };\n\n  const navGroup = (item, index) => {\n    var _item$items;\n\n    const {\n      component,\n      name,\n      icon,\n      to,\n      ...rest\n    } = item;\n    const Component = component;\n    return /*#__PURE__*/_jsxDEV(Component, {\n      idx: String(index),\n      toggler: navLink(name, icon),\n      visible: location.pathname.startsWith(to),\n      ...rest,\n      children: (_item$items = item.items) === null || _item$items === void 0 ? void 0 : _item$items.map((item, index) => item.items ? navGroup(item, index) : navItem(item, index))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: items && items.map((item, index) => item.items ? navGroup(item, index) : navItem(item, index))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppSidebarNav, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = AppSidebarNav;\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AppSidebarNav\");","map":{"version":3,"sources":["D:/University of Florida/Spring 22/Software Engineering/project/SE-Project/new-frontend/src/components/AppSidebarNav.js"],"names":["React","NavLink","useLocation","PropTypes","CBadge","AppSidebarNav","items","location","navLink","name","icon","badge","color","text","navItem","item","index","component","rest","Component","to","activeClassName","navGroup","String","pathname","startsWith","map","propTypes","arrayOf","any","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { CBadge } from '@coreui/react'\r\n\r\nexport const AppSidebarNav = ({ items }) => {\r\n  const location = useLocation()\r\n  const navLink = (name, icon, badge) => {\r\n    return (\r\n      <>\r\n        {icon && icon}\r\n        {name && name}\r\n        {badge && (\r\n          <CBadge color={badge.color} className=\"ms-auto\">\r\n            {badge.text}\r\n          </CBadge>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const navItem = (item, index) => {\r\n    const { component, name, badge, icon, ...rest } = item\r\n    const Component = component\r\n    return (\r\n      <Component\r\n        {...(rest.to &&\r\n          !rest.items && {\r\n            component: NavLink,\r\n            activeClassName: 'active',\r\n          })}\r\n        key={index}\r\n        {...rest}\r\n      >\r\n        {navLink(name, icon, badge)}\r\n      </Component>\r\n    )\r\n  }\r\n  const navGroup = (item, index) => {\r\n    const { component, name, icon, to, ...rest } = item\r\n    const Component = component\r\n    return (\r\n      <Component\r\n        idx={String(index)}\r\n        key={index}\r\n        toggler={navLink(name, icon)}\r\n        visible={location.pathname.startsWith(to)}\r\n        {...rest}\r\n      >\r\n        {item.items?.map((item, index) =>\r\n          item.items ? navGroup(item, index) : navItem(item, index),\r\n        )}\r\n      </Component>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {items &&\r\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nAppSidebarNav.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n}\r\n"]},"metadata":{},"sourceType":"module"}