{"ast":null,"code":"var _jsxFileName = \"/Users/hismajesty/Desktop/SE-Project/new-frontend/src/views/tenantRequests/viewTenantRequests/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useState, useEffect, useRef } from 'react';\nimport Tmrt from './Tmrt';\nimport { CButton, CCard, CCardTitle, CCardBody, CCol, CFormFloating, CFormInput, CFormLabel, CFormSelect, CRow, CForm, CToast, CToaster, CToastBody, CToastClose, CTable, CTableHead, CTableBody, CTableRow, CTableHeaderCell } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst viewTenantRequests = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  var content = null;\n\n  const getUser = () => {\n    (async () => {\n      const response = await fetch('http://localhost:8080/api/user', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      content = await response.json();\n      setEmail(content.email);\n      getData(content.email);\n    })();\n  };\n\n  const [data, setData] = useState(null);\n  const [maintenanceData, setMaintenanceData] = useState(null);\n\n  const getData = email => {\n    console.log(email);\n    fetch(\"http://localhost:8080/api/tenant-maintenance-requests\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (myJSON) {\n      setData(JSON.stringify(myJSON));\n    });\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Maintenance Request History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CTable, {\n      align: \"middle\",\n      className: \"mb-0 border striped hover\",\n      hover: true,\n      responsive: true,\n      bordered: true,\n      children: [/*#__PURE__*/_jsxDEV(CTableHead, {\n        children: /*#__PURE__*/_jsxDEV(CTableRow, {\n          children: [/*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n            className: \"text-center\",\n            children: \"Maint. Req. #\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n            className: \"text-center\",\n            children: \"Created On\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n            className: \"text-center\",\n            children: \"Issue Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n            className: \"text-center\",\n            children: \"Facility Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CTableBody, {\n        children: data && /*#__PURE__*/_jsxDEV(Tmrt, {\n          Data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(viewTenantRequests, \"DLnuEzCqHUDbve2LecLMyDqT7ZA=\");\n\nexport default viewTenantRequests;","map":{"version":3,"sources":["/Users/hismajesty/Desktop/SE-Project/new-frontend/src/views/tenantRequests/viewTenantRequests/index.js"],"names":["React","lazy","useState","useEffect","useRef","Tmrt","CButton","CCard","CCardTitle","CCardBody","CCol","CFormFloating","CFormInput","CFormLabel","CFormSelect","CRow","CForm","CToast","CToaster","CToastBody","CToastClose","CTable","CTableHead","CTableBody","CTableRow","CTableHeaderCell","viewTenantRequests","props","email","setEmail","content","getUser","response","fetch","headers","credentials","json","getData","data","setData","maintenanceData","setMaintenanceData","console","log","method","body","JSON","stringify","then","myJSON"],"mappings":"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","sourcesContent":["import React, { lazy, useState, useEffect, useRef} from 'react'\nimport Tmrt from './Tmrt';\n\nimport {\n    CButton,\n    CCard,\n    CCardTitle,\n    CCardBody,\n    CCol,\n    CFormFloating,\n    CFormInput,\n    CFormLabel,\n    CFormSelect,\n    CRow,\n    CForm,\n    CToast,\n    CToaster,\n    CToastBody,\n    CToastClose,\n    CTable,\n    CTableHead,\n    CTableBody,\n    CTableRow,\n    CTableHeaderCell,\n\n  } from '@coreui/react'\n\n\nconst viewTenantRequests = (props) => {\n\n    const [email, setEmail] = useState('');\n    var content = null;\n  \n    const getUser = () => {\n        (\n            async () => {\n                const response = await fetch('http://localhost:8080/api/user', {\n                    headers: {'Content-Type':'application/json'},\n                    credentials:'include'\n                });\n                content = await response.json();\n                setEmail(content.email);\n                getData(content.email);\n            }\n        )();\n    };\n\n    const [data, setData] = useState(null);\n    const [maintenanceData, setMaintenanceData] = useState(null);\n\n    const getData = (email) => {\n      console.log(email); \n\n    fetch(\"http://localhost:8080/api/tenant-maintenance-requests\", {\n        method:\"POST\",\n        headers: {'Content-Type':'application/json'},\n        body: JSON.stringify({\n          email\n        })\n    }).then(function (response) {\n        console.log(response)\n        return response.json();\n    }).then(function(myJSON){\n        setData(JSON.stringify(myJSON));\n    })\n    }\n\n  \n  useEffect(() => {\n    getUser()\n  },[])\n\n  return (\n    <div>\n        <h2>Maintenance Request History</h2>\n        <CTable align=\"middle\" className=\"mb-0 border striped hover\" hover responsive bordered>\n          <CTableHead >\n            <CTableRow>\n              <CTableHeaderCell className=\"text-center\">Maint. Req. #</CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\">Created On</CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\">Issue Description</CTableHeaderCell>\n              <CTableHeaderCell className=\"text-center\">Facility Name</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {data && <Tmrt Data ={data}/>}\n          </CTableBody>\n        </CTable>\n    </div>\n  )\n}\n\nexport default viewTenantRequests;\n"]},"metadata":{},"sourceType":"module"}