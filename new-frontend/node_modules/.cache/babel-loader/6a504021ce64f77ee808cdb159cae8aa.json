{"ast":null,"code":"var _jsxFileName = \"/Users/hrishikeshmahajan/UFL/SE/SE-Project/new-frontend/src/components/AppSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cilBell, cilCalculator, cilChartPie, cilCursor, cilDrop, cilNotes, cilPencil, cilPuzzle, cilSpeedometer, cilStar, cilBowling, cilPaint, cilUserPlus, cilRoom, cilCasino, cilPen, cilBuilding, cilPlus, cilMinus } from '@coreui/icons';\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler, CImage, CNavGroup, CNavItem, CNavTitle } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { AppSidebarNav } from './AppSidebarNav';\nimport { logoNegative } from 'src/assets/brand/logo-negative';\nimport { sygnet } from 'src/assets/brand/sygnet';\nimport cover from 'src/assets/brand/cover.png';\nimport defLogo from \"src/assets/brand/default.svg\";\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css'; // sidebar nav config\n\nimport navigation from '../_nav'; //import navigation from '../_nav_tenant';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppSidebar = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const unfoldable = useSelector(state => state.sidebarUnfoldable);\n  const sidebarShow = useSelector(state => state.sidebarShow);\n  console.log(props.type);\n  const tenantNav = [{\n    component: CNavItem,\n    name: 'Pay Rent',\n    to: '/payRent',\n    icon: /*#__PURE__*/_jsxDEV(CIcon, {\n      icon: cilSpeedometer,\n      customClassName: \"nav-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)\n  }, {\n    component: CNavGroup,\n    name: 'Maintenance Requests',\n    icon: /*#__PURE__*/_jsxDEV(CIcon, {\n      icon: cilBuilding,\n      customClassName: \"nav-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this),\n    items: [{\n      component: CNavItem,\n      name: 'Request Service',\n      to: '/tenantRequests/requestService'\n    }, {\n      component: CNavItem,\n      name: 'View Your Requests',\n      to: '/tenantRequests/viewTenantRequests'\n    }]\n  },, {\n    component: CNavItem,\n    name: 'Overview',\n    to: '/tenantOverview',\n    icon: /*#__PURE__*/_jsxDEV(CIcon, {\n      icon: cilBowling,\n      customClassName: \"nav-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)\n  }];\n  const maintenanceNav = [{\n    component: CNavItem,\n    name: 'Assigned MR',\n    to: '/assignedMR',\n    icon: /*#__PURE__*/_jsxDEV(CIcon, {\n      icon: cilSpeedometer,\n      customClassName: \"nav-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this)\n  }, {\n    component: CNavItem,\n    name: 'Work Overview',\n    to: '/workOverview',\n    icon: /*#__PURE__*/_jsxDEV(CIcon, {\n      icon: cilSpeedometer,\n      customClassName: \"nav-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }, this)\n  }];\n\n  if (props.type === \"admin\") {\n    return /*#__PURE__*/_jsxDEV(CSidebar, {\n      position: \"fixed\",\n      unfoldable: unfoldable,\n      visible: sidebarShow,\n      onVisibleChange: visible => {\n        dispatch({\n          type: 'set',\n          sidebarShow: visible\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(CSidebarBrand, {\n        className: \"d-none d-md-flex\",\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(CImage, {\n          src: \"/cover.png\",\n          width: 225,\n          height: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CIcon, {\n          className: \"sidebar-brand-narrow\",\n          icon: sygnet,\n          height: 35\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarNav, {\n        children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n          children: /*#__PURE__*/_jsxDEV(AppSidebarNav, {\n            items: navigation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarToggler, {\n        className: \"d-none d-lg-flex\",\n        onClick: () => dispatch({\n          type: 'set',\n          sidebarUnfoldable: !unfoldable\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  } else if (props.type === \"maintenance\") {\n    return /*#__PURE__*/_jsxDEV(CSidebar, {\n      position: \"fixed\",\n      unfoldable: unfoldable,\n      visible: sidebarShow,\n      onVisibleChange: visible => {\n        dispatch({\n          type: 'set',\n          sidebarShow: visible\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(CSidebarBrand, {\n        className: \"d-none d-md-flex\",\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(CImage, {\n          src: \"/cover.png\",\n          width: 225,\n          height: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CIcon, {\n          className: \"sidebar-brand-narrow\",\n          icon: sygnet,\n          height: 35\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarNav, {\n        children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n          children: /*#__PURE__*/_jsxDEV(AppSidebarNav, {\n            items: maintenanceNav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarToggler, {\n        className: \"d-none d-lg-flex\",\n        onClick: () => dispatch({\n          type: 'set',\n          sidebarUnfoldable: !unfoldable\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  } else if (props.type === \"tenant\") {\n    return /*#__PURE__*/_jsxDEV(CSidebar, {\n      position: \"fixed\",\n      unfoldable: unfoldable,\n      visible: sidebarShow,\n      onVisibleChange: visible => {\n        dispatch({\n          type: 'set',\n          sidebarShow: visible\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(CSidebarBrand, {\n        className: \"d-none d-md-flex\",\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(CImage, {\n          src: \"/cover.png\",\n          width: 225,\n          height: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CIcon, {\n          className: \"sidebar-brand-narrow\",\n          icon: sygnet,\n          height: 35\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarNav, {\n        children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n          children: /*#__PURE__*/_jsxDEV(AppSidebarNav, {\n            items: tenantNav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarToggler, {\n        className: \"d-none d-lg-flex\",\n        onClick: () => dispatch({\n          type: 'set',\n          sidebarUnfoldable: !unfoldable\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Invalid Credentials\"\n  }, void 0, false);\n};\n\n_s(AppSidebar, \"KjoCpiMCRF2BfnlV7ZQfw4phdIU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AppSidebar;\nexport default _c2 = /*#__PURE__*/React.memo(AppSidebar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppSidebar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/hrishikeshmahajan/UFL/SE/SE-Project/new-frontend/src/components/AppSidebar.js"],"names":["React","useSelector","useDispatch","cilBell","cilCalculator","cilChartPie","cilCursor","cilDrop","cilNotes","cilPencil","cilPuzzle","cilSpeedometer","cilStar","cilBowling","cilPaint","cilUserPlus","cilRoom","cilCasino","cilPen","cilBuilding","cilPlus","cilMinus","CSidebar","CSidebarBrand","CSidebarNav","CSidebarToggler","CImage","CNavGroup","CNavItem","CNavTitle","CIcon","AppSidebarNav","logoNegative","sygnet","cover","SimpleBar","navigation","AppSidebar","props","dispatch","unfoldable","state","sidebarUnfoldable","sidebarShow","console","log","type","tenantNav","component","name","to","icon","items","maintenanceNav","visible","memo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  cilBell,\n  cilCalculator,\n  cilChartPie,\n  cilCursor,\n  cilDrop,\n  cilNotes,\n  cilPencil,\n  cilPuzzle,\n  cilSpeedometer,\n  cilStar,\n  cilBowling,\n  cilPaint,\n  cilUserPlus,\n  cilRoom,\n  cilCasino,\n  cilPen,\n  cilBuilding,\n  cilPlus,\n  cilMinus,\n} from '@coreui/icons'\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler, CImage, CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport { logoNegative } from 'src/assets/brand/logo-negative'\nimport { sygnet } from 'src/assets/brand/sygnet'\nimport cover from 'src/assets/brand/cover.png';\nimport defLogo from 'src/assets/brand/default.svg';\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\n// sidebar nav config\nimport navigation from '../_nav';\n//import navigation from '../_nav_tenant';\n\nconst AppSidebar = (props) => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n  \n  console.log(props.type)\n\n  const tenantNav = [\n      {\n          component: CNavItem,\n          name: 'Pay Rent',\n          to: '/payRent',\n          icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n      },\n      {\n        component: CNavGroup,\n        name: 'Maintenance Requests',\n        icon: <CIcon icon={cilBuilding} customClassName=\"nav-icon\" />,\n        items: [\n          {\n            component: CNavItem,\n            name: 'Request Service',\n            to: '/tenantRequests/requestService',\n          },\n          {\n            component: CNavItem,\n            name: 'View Your Requests',\n            to: '/tenantRequests/viewTenantRequests',\n          },\n        ],\n      },,\n      {\n          component: CNavItem,\n          name: 'Overview',\n          to: '/tenantOverview',\n          icon: <CIcon icon={cilBowling} customClassName=\"nav-icon\" />,\n      },\n  ]\n\n  const maintenanceNav = [\n    {\n        component: CNavItem,\n        name: 'Assigned MR',\n        to: '/assignedMR',\n        icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    },\n    {\n        component: CNavItem,\n        name: 'Work Overview',\n        to: '/workOverview',\n        icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n    },\n]\n\n  if(props.type === \"admin\")\n  {\n    return (\n      <CSidebar\n        position=\"fixed\"\n        unfoldable={unfoldable}\n        visible={sidebarShow}\n        onVisibleChange={(visible) => {\n          dispatch({ type: 'set', sidebarShow: visible })\n        }}\n      >\n        <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n          <CImage src='/cover.png' width={225} height={100}></CImage>\n          <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n        </CSidebarBrand>\n        <CSidebarNav>\n          <SimpleBar>\n            <AppSidebarNav items={navigation} />\n          </SimpleBar>\n        </CSidebarNav>\n        <CSidebarToggler\n          className=\"d-none d-lg-flex\"\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n        />\n      </CSidebar>\n    )\n  }\n  else if (props.type === \"maintenance\")\n  {\n    return (\n      <CSidebar\n        position=\"fixed\"\n        unfoldable={unfoldable}\n        visible={sidebarShow}\n        onVisibleChange={(visible) => {\n          dispatch({ type: 'set', sidebarShow: visible })\n        }}\n      >\n        <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n          <CImage src='/cover.png' width={225} height={100}></CImage>\n          <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n        </CSidebarBrand>\n        <CSidebarNav>\n          <SimpleBar>\n            <AppSidebarNav items={maintenanceNav} />\n          </SimpleBar>\n        </CSidebarNav>\n        <CSidebarToggler\n          className=\"d-none d-lg-flex\"\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n        />\n      </CSidebar>\n    )\n  }\n  else if (props.type === \"tenant\")\n  {\n    return (\n      <CSidebar\n        position=\"fixed\"\n        unfoldable={unfoldable}\n        visible={sidebarShow}\n        onVisibleChange={(visible) => {\n          dispatch({ type: 'set', sidebarShow: visible })\n        }}\n      >\n        <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n          <CImage src='/cover.png' width={225} height={100}></CImage>\n          <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\n        </CSidebarBrand>\n        <CSidebarNav>\n          <SimpleBar>\n            <AppSidebarNav items={tenantNav} />\n          </SimpleBar>\n        </CSidebarNav>\n        <CSidebarToggler\n          className=\"d-none d-lg-flex\"\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\n        />\n      </CSidebar>\n    )\n  }\n  return (\n    <>Invalid Credentials</>\n  )\n}\n\nexport default React.memo(AppSidebar)\n"]},"metadata":{},"sourceType":"module"}