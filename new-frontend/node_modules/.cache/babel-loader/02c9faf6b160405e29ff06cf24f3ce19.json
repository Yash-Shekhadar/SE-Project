{"ast":null,"code":"var _jsxFileName = \"D:\\\\University of Florida\\\\Spring 22\\\\Software Engineering\\\\project\\\\SE-Project\\\\new-frontend\\\\src\\\\components\\\\AppSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { cilBell, cilCalculator, cilChartPie, cilCursor, cilDrop, cilNotes, cilPencil, cilPuzzle, cilSpeedometer, cilStar, cilBowling, cilPaint, cilUserPlus, cilRoom, cilCasino, cilPen, cilBuilding, cilPlus, cilMinus } from '@coreui/icons';\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler, CImage, CNavGroup, CNavItem, CNavTitle } from '@coreui/react';\nimport CIcon from '@coreui/icons-react';\nimport { AppSidebarNav } from './AppSidebarNav';\nimport { logoNegative } from 'src/assets/brand/logo-negative';\nimport { sygnet } from 'src/assets/brand/sygnet';\nimport cover from 'src/assets/brand/cover.png';\nimport defLogo from \"src/assets/brand/default.svg\";\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar/dist/simplebar.min.css'; // sidebar nav config\n\nimport navigation from '../_nav'; //import navigation from '../_nav_tenant';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppSidebar = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const unfoldable = useSelector(state => state.sidebarUnfoldable);\n  const sidebarShow = useSelector(state => state.sidebarShow);\n  console.log(props.type);\n  const tenantNav = [{\n    component: CNavGroup,\n    name: 'Maintenance Requests',\n    icon: /*#__PURE__*/_jsxDEV(CIcon, {\n      icon: cilBuilding,\n      customClassName: \"nav-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }, this),\n    items: [{\n      component: CNavItem,\n      name: 'Request Service',\n      to: '/tenantRequests/requestService'\n    }, {\n      component: CNavItem,\n      name: 'View Your Requests',\n      to: '/tenantRequests/viewTenantRequests'\n    }]\n  }, {\n    component: CNavItem,\n    name: 'Pay Rent',\n    to: '/payRent',\n    icon: /*#__PURE__*/_jsxDEV(CIcon, {\n      icon: cilSpeedometer,\n      customClassName: \"nav-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this)\n  }];\n  const maintenanceNav = [{\n    component: CNavItem,\n    name: 'Assigned MR',\n    to: '/assignedMR',\n    icon: /*#__PURE__*/_jsxDEV(CIcon, {\n      icon: cilSpeedometer,\n      customClassName: \"nav-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }, this)\n  }, {\n    component: CNavItem,\n    name: 'Work Overview',\n    to: '/workOverview',\n    icon: /*#__PURE__*/_jsxDEV(CIcon, {\n      icon: cilSpeedometer,\n      customClassName: \"nav-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }, this)\n  }];\n\n  if (props.type === \"admin\") {\n    return /*#__PURE__*/_jsxDEV(CSidebar, {\n      position: \"fixed\",\n      unfoldable: unfoldable,\n      visible: sidebarShow,\n      onVisibleChange: visible => {\n        dispatch({\n          type: 'set',\n          sidebarShow: visible\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(CSidebarBrand, {\n        className: \"d-none d-md-flex\",\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(CImage, {\n          src: \"/cover.png\",\n          width: 225,\n          height: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CIcon, {\n          className: \"sidebar-brand-narrow\",\n          icon: sygnet,\n          height: 35\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarNav, {\n        children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n          children: /*#__PURE__*/_jsxDEV(AppSidebarNav, {\n            items: navigation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarToggler, {\n        className: \"d-none d-lg-flex\",\n        onClick: () => dispatch({\n          type: 'set',\n          sidebarUnfoldable: !unfoldable\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  } else if (props.type === \"maintenance\") {\n    return /*#__PURE__*/_jsxDEV(CSidebar, {\n      position: \"fixed\",\n      unfoldable: unfoldable,\n      visible: sidebarShow,\n      onVisibleChange: visible => {\n        dispatch({\n          type: 'set',\n          sidebarShow: visible\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(CSidebarBrand, {\n        className: \"d-none d-md-flex\",\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(CImage, {\n          src: \"/cover.png\",\n          width: 225,\n          height: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CIcon, {\n          className: \"sidebar-brand-narrow\",\n          icon: sygnet,\n          height: 35\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarNav, {\n        children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n          children: /*#__PURE__*/_jsxDEV(AppSidebarNav, {\n            items: maintenanceNav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarToggler, {\n        className: \"d-none d-lg-flex\",\n        onClick: () => dispatch({\n          type: 'set',\n          sidebarUnfoldable: !unfoldable\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  } else if (props.type === \"tenant\") {\n    return /*#__PURE__*/_jsxDEV(CSidebar, {\n      position: \"fixed\",\n      unfoldable: unfoldable,\n      visible: sidebarShow,\n      onVisibleChange: visible => {\n        dispatch({\n          type: 'set',\n          sidebarShow: visible\n        });\n      },\n      children: [/*#__PURE__*/_jsxDEV(CSidebarBrand, {\n        className: \"d-none d-md-flex\",\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(CImage, {\n          src: \"/cover.png\",\n          width: 225,\n          height: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CIcon, {\n          className: \"sidebar-brand-narrow\",\n          icon: sygnet,\n          height: 35\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarNav, {\n        children: /*#__PURE__*/_jsxDEV(SimpleBar, {\n          children: /*#__PURE__*/_jsxDEV(AppSidebarNav, {\n            items: tenantNav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSidebarToggler, {\n        className: \"d-none d-lg-flex\",\n        onClick: () => dispatch({\n          type: 'set',\n          sidebarUnfoldable: !unfoldable\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Invalid Credentials\"\n  }, void 0, false);\n};\n\n_s(AppSidebar, \"KjoCpiMCRF2BfnlV7ZQfw4phdIU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AppSidebar;\nexport default _c2 = /*#__PURE__*/React.memo(AppSidebar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppSidebar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/University of Florida/Spring 22/Software Engineering/project/SE-Project/new-frontend/src/components/AppSidebar.js"],"names":["React","useSelector","useDispatch","cilBell","cilCalculator","cilChartPie","cilCursor","cilDrop","cilNotes","cilPencil","cilPuzzle","cilSpeedometer","cilStar","cilBowling","cilPaint","cilUserPlus","cilRoom","cilCasino","cilPen","cilBuilding","cilPlus","cilMinus","CSidebar","CSidebarBrand","CSidebarNav","CSidebarToggler","CImage","CNavGroup","CNavItem","CNavTitle","CIcon","AppSidebarNav","logoNegative","sygnet","cover","SimpleBar","navigation","AppSidebar","props","dispatch","unfoldable","state","sidebarUnfoldable","sidebarShow","console","log","type","tenantNav","component","name","icon","items","to","maintenanceNav","visible","memo"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  cilBell,\r\n  cilCalculator,\r\n  cilChartPie,\r\n  cilCursor,\r\n  cilDrop,\r\n  cilNotes,\r\n  cilPencil,\r\n  cilPuzzle,\r\n  cilSpeedometer,\r\n  cilStar,\r\n  cilBowling,\r\n  cilPaint,\r\n  cilUserPlus,\r\n  cilRoom,\r\n  cilCasino,\r\n  cilPen,\r\n  cilBuilding,\r\n  cilPlus,\r\n  cilMinus,\r\n} from '@coreui/icons'\r\nimport { CSidebar, CSidebarBrand, CSidebarNav, CSidebarToggler, CImage, CNavGroup, CNavItem, CNavTitle } from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nimport { AppSidebarNav } from './AppSidebarNav'\r\n\r\nimport { logoNegative } from 'src/assets/brand/logo-negative'\r\nimport { sygnet } from 'src/assets/brand/sygnet'\r\nimport cover from 'src/assets/brand/cover.png';\r\nimport defLogo from 'src/assets/brand/default.svg';\r\n\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\n\r\n// sidebar nav config\r\nimport navigation from '../_nav';\r\n//import navigation from '../_nav_tenant';\r\n\r\nconst AppSidebar = (props) => {\r\n  const dispatch = useDispatch()\r\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\r\n  const sidebarShow = useSelector((state) => state.sidebarShow)\r\n  \r\n  console.log(props.type)\r\n\r\n  const tenantNav = [\r\n      {\r\n        component: CNavGroup,\r\n        name: 'Maintenance Requests',\r\n        icon: <CIcon icon={cilBuilding} customClassName=\"nav-icon\" />,\r\n        items: [\r\n          {\r\n            component: CNavItem,\r\n            name: 'Request Service',\r\n            to: '/tenantRequests/requestService',\r\n          },\r\n          {\r\n            component: CNavItem,\r\n            name: 'View Your Requests',\r\n            to: '/tenantRequests/viewTenantRequests',\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        component: CNavItem,\r\n        name: 'Pay Rent',\r\n        to: '/payRent',\r\n        icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\r\n      },\r\n      \r\n  ]\r\n\r\n  const maintenanceNav = [\r\n    {\r\n        component: CNavItem,\r\n        name: 'Assigned MR',\r\n        to: '/assignedMR',\r\n        icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\r\n    },\r\n    {\r\n        component: CNavItem,\r\n        name: 'Work Overview',\r\n        to: '/workOverview',\r\n        icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\r\n    },\r\n]\r\n\r\n  if(props.type === \"admin\")\r\n  {\r\n    return (\r\n      <CSidebar\r\n        position=\"fixed\"\r\n        unfoldable={unfoldable}\r\n        visible={sidebarShow}\r\n        onVisibleChange={(visible) => {\r\n          dispatch({ type: 'set', sidebarShow: visible })\r\n        }}\r\n      >\r\n        <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\r\n          <CImage src='/cover.png' width={225} height={100}></CImage>\r\n          <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\r\n        </CSidebarBrand>\r\n        <CSidebarNav>\r\n          <SimpleBar>\r\n            <AppSidebarNav items={navigation} />\r\n          </SimpleBar>\r\n        </CSidebarNav>\r\n        <CSidebarToggler\r\n          className=\"d-none d-lg-flex\"\r\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\r\n        />\r\n      </CSidebar>\r\n    )\r\n  }\r\n  else if (props.type === \"maintenance\")\r\n  {\r\n    return (\r\n      <CSidebar\r\n        position=\"fixed\"\r\n        unfoldable={unfoldable}\r\n        visible={sidebarShow}\r\n        onVisibleChange={(visible) => {\r\n          dispatch({ type: 'set', sidebarShow: visible })\r\n        }}\r\n      >\r\n        <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\r\n          <CImage src='/cover.png' width={225} height={100}></CImage>\r\n          <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\r\n        </CSidebarBrand>\r\n        <CSidebarNav>\r\n          <SimpleBar>\r\n            <AppSidebarNav items={maintenanceNav} />\r\n          </SimpleBar>\r\n        </CSidebarNav>\r\n        <CSidebarToggler\r\n          className=\"d-none d-lg-flex\"\r\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\r\n        />\r\n      </CSidebar>\r\n    )\r\n  }\r\n  else if (props.type === \"tenant\")\r\n  {\r\n    return (\r\n      <CSidebar\r\n        position=\"fixed\"\r\n        unfoldable={unfoldable}\r\n        visible={sidebarShow}\r\n        onVisibleChange={(visible) => {\r\n          dispatch({ type: 'set', sidebarShow: visible })\r\n        }}\r\n      >\r\n        <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\r\n          <CImage src='/cover.png' width={225} height={100}></CImage>\r\n          <CIcon className=\"sidebar-brand-narrow\" icon={sygnet} height={35} />\r\n        </CSidebarBrand>\r\n        <CSidebarNav>\r\n          <SimpleBar>\r\n            <AppSidebarNav items={tenantNav} />\r\n          </SimpleBar>\r\n        </CSidebarNav>\r\n        <CSidebarToggler\r\n          className=\"d-none d-lg-flex\"\r\n          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}\r\n        />\r\n      </CSidebar>\r\n    )\r\n  }\r\n  return (\r\n    <>Invalid Credentials</>\r\n  )\r\n}\r\n\r\nexport default React.memo(AppSidebar)\r\n"]},"metadata":{},"sourceType":"module"}