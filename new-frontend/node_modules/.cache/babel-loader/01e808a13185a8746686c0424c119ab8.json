{"ast":null,"code":"'use strict';\n\nvar IS_PURE = require('../internals/is-pure');\n\nvar $ = require('../internals/export');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar call = require('../internals/function-call');\n\nvar aCallable = require('../internals/a-callable');\n\nvar isCallable = require('../internals/is-callable');\n\nvar anObject = require('../internals/an-object');\n\nvar getIterator = require('../internals/get-iterator');\n\nvar iterate = require('../internals/iterate'); // `Set.prototype.isSubsetOf` method\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\n\n\n$({\n  target: 'Set',\n  proto: true,\n  real: true,\n  forced: IS_PURE\n}, {\n  isSubsetOf: function isSubsetOf(iterable) {\n    var iterator = getIterator(this);\n    var otherSet = anObject(iterable);\n    var hasCheck = otherSet.has;\n\n    if (!isCallable(hasCheck)) {\n      otherSet = new (getBuiltIn('Set'))(iterable);\n      hasCheck = aCallable(otherSet.has);\n    }\n\n    return !iterate(iterator, function (value, stop) {\n      if (call(hasCheck, otherSet, value) === false) return stop();\n    }, {\n      IS_ITERATOR: true,\n      INTERRUPTED: true\n    }).stopped;\n  }\n});","map":{"version":3,"sources":["D:/University of Florida/Spring 22/Software Engineering/project/SE-Project/new-frontend/node_modules/core-js/modules/esnext.set.is-subset-of.js"],"names":["IS_PURE","require","$","getBuiltIn","call","aCallable","isCallable","anObject","getIterator","iterate","target","proto","real","forced","isSubsetOf","iterable","iterator","otherSet","hasCheck","has","value","stop","IS_ITERATOR","INTERRUPTED","stopped"],"mappings":"AAAA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAIC,CAAC,GAAGD,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,4BAAD,CAAlB;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,yBAAD,CAAvB;;AACA,IAAIK,UAAU,GAAGL,OAAO,CAAC,0BAAD,CAAxB;;AACA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,wBAAD,CAAtB;;AACA,IAAIO,WAAW,GAAGP,OAAO,CAAC,2BAAD,CAAzB;;AACA,IAAIQ,OAAO,GAAGR,OAAO,CAAC,sBAAD,CAArB,C,CAEA;AACA;;;AACAC,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,KAAK,EAAE,IAAxB;AAA8BC,EAAAA,IAAI,EAAE,IAApC;AAA0CC,EAAAA,MAAM,EAAEb;AAAlD,CAAD,EAA8D;AAC7Dc,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AACxC,QAAIC,QAAQ,GAAGR,WAAW,CAAC,IAAD,CAA1B;AACA,QAAIS,QAAQ,GAAGV,QAAQ,CAACQ,QAAD,CAAvB;AACA,QAAIG,QAAQ,GAAGD,QAAQ,CAACE,GAAxB;;AACA,QAAI,CAACb,UAAU,CAACY,QAAD,CAAf,EAA2B;AACzBD,MAAAA,QAAQ,GAAG,KAAKd,UAAU,CAAC,KAAD,CAAf,EAAwBY,QAAxB,CAAX;AACAG,MAAAA,QAAQ,GAAGb,SAAS,CAACY,QAAQ,CAACE,GAAV,CAApB;AACD;;AACD,WAAO,CAACV,OAAO,CAACO,QAAD,EAAW,UAAUI,KAAV,EAAiBC,IAAjB,EAAuB;AAC/C,UAAIjB,IAAI,CAACc,QAAD,EAAWD,QAAX,EAAqBG,KAArB,CAAJ,KAAoC,KAAxC,EAA+C,OAAOC,IAAI,EAAX;AAChD,KAFc,EAEZ;AAAEC,MAAAA,WAAW,EAAE,IAAf;AAAqBC,MAAAA,WAAW,EAAE;AAAlC,KAFY,CAAP,CAEqCC,OAF7C;AAGD;AAZ4D,CAA9D,CAAD","sourcesContent":["'use strict';\r\nvar IS_PURE = require('../internals/is-pure');\r\nvar $ = require('../internals/export');\r\nvar getBuiltIn = require('../internals/get-built-in');\r\nvar call = require('../internals/function-call');\r\nvar aCallable = require('../internals/a-callable');\r\nvar isCallable = require('../internals/is-callable');\r\nvar anObject = require('../internals/an-object');\r\nvar getIterator = require('../internals/get-iterator');\r\nvar iterate = require('../internals/iterate');\r\n\r\n// `Set.prototype.isSubsetOf` method\r\n// https://tc39.github.io/proposal-set-methods/#Set.prototype.isSubsetOf\r\n$({ target: 'Set', proto: true, real: true, forced: IS_PURE }, {\r\n  isSubsetOf: function isSubsetOf(iterable) {\r\n    var iterator = getIterator(this);\r\n    var otherSet = anObject(iterable);\r\n    var hasCheck = otherSet.has;\r\n    if (!isCallable(hasCheck)) {\r\n      otherSet = new (getBuiltIn('Set'))(iterable);\r\n      hasCheck = aCallable(otherSet.has);\r\n    }\r\n    return !iterate(iterator, function (value, stop) {\r\n      if (call(hasCheck, otherSet, value) === false) return stop();\r\n    }, { IS_ITERATOR: true, INTERRUPTED: true }).stopped;\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}