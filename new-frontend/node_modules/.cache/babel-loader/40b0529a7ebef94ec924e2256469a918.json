{"ast":null,"code":"var _jsxFileName = \"/Users/hrishikeshmahajan/UFL/SE/SE-Project/new-frontend/src/views/tenantRequests/requestService/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useState, useEffect, useRef } from 'react';\nimport { CButton, CCard, CCardTitle, CCardBody, CCol, CFormFloating, CFormInput, CFormLabel, CFormSelect, CRow, CForm, CToast, CToaster, CToastBody, CToastClose } from '@coreui/react';\nimport selbox from './sel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst requestService = props => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [maintenanceData, setMaintenanceData] = useState(null);\n\n  const getData = () => {\n    fetch(\"http://localhost:8080/api/maintenance-request\").then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (myJSON) {\n      console.log(myJSON);\n      setData(JSON.stringify(myJSON));\n    });\n  };\n\n  const getMaintenance = () => {\n    fetch(\"http://localhost:8080/api/get-maintenance-personnel\").then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (myJSON) {\n      console.log(myJSON);\n      setMaintenanceData(JSON.stringify(myJSON));\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    getMaintenance();\n  }, []); //   const [lData, setLData] = useState();\n  //   const getData = (email) => {\n  //     console.log(email); \n  //     (\n  //         async () => {\n  //             const resp = await fetch(\"http://localhost:8080/api/getUnit\", {\n  //                 method:\"POST\",\n  //                 headers: {'Content-Type':'application/json'},\n  //                 body: JSON.stringify({\n  //                     email\n  //                 })\n  //         })\n  //         const content = await resp.json()\n  //         console.log(content)\n  //         setLData(content)\n  //     }\n  //     )();\n  //   }\n\n  function padTo2Digits(num) {\n    return num.toString().padStart(2, '0');\n  }\n\n  function formatDate(date) {\n    return [padTo2Digits(date.getDate()), padTo2Digits(date.getMonth() + 1), date.getFullYear()].join('-');\n  } //   const [name, setName] = useState('');\n  //   const [type, setType] = useState('');\n  //   const [email, setEmail] = useState('');\n  //   useEffect(() => {\n  //       (\n  //           async () => {\n  //               const response = await fetch('http://localhost:8080/api/user', {\n  //                   headers: {'Content-Type':'application/json'},\n  //                   credentials:'include'\n  //               });\n  //               const content = await response.json();\n  //               setName(content.name);\n  //               setType(content.type);\n  //               setEmail(content.email);\n  //               getData(content.email);\n  //           }\n  //       )();\n  //   });\n\n\n  const [fName, setFName] = useState('');\n  const [issueDesc, setIssueDesc] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    var x = new Date();\n    var created_on = formatDate(x);\n    const info = {\n      email,\n      fName,\n      issueDesc,\n      created_on\n    };\n    fetch('http://localhost:8080/api/create-maintenance-request', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(info)\n    }).then(() => {\n      console.log(info);\n    });\n  }; // const [toast, addToast] = useState(0)\n  // const toaster = useRef()\n  // const confirmationToast = (\n  //     <CToast color=\"success\" className=\"text-white align-items-center\">\n  //         <div className=\"d-flex\">\n  //             <CToastBody>Apartment number {apt_no} added successfully!</CToastBody>\n  //             <CToastClose className=\"me-2 m-auto\" white />\n  //         </div>\n  //     </CToast>\n  // )\n\n\n  const [toast, addToast] = useState(0);\n  const toaster = useRef();\n\n  const confirmationToast = /*#__PURE__*/_jsxDEV(CToast, {\n    color: \"success\",\n    className: \"text-white align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(CToastBody, {\n        children: \"Maintenance request generated successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CToastClose, {\n        className: \"me-2 m-auto\",\n        white: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CCard, {\n      children: /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CCardTitle, {\n          children: \"Fill maintenance request details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CForm, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            xs: {\n              gutter: 2\n            },\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(CFormFloating, {\n                children: [/*#__PURE__*/_jsxDEV(CFormInput, {\n                  onChange: e => setIssueDesc(e.target.value),\n                  type: \"text\",\n                  id: \"issueDesc\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CFormLabel, {\n                  htmlFor: \"issueDesc\",\n                  children: \"Issue Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(CFormFloating, {\n                children: [/*#__PURE__*/_jsxDEV(CFormSelect, {\n                  onChange: e => setFName(e.target.value),\n                  id: \"furniture\",\n                  children: lData && /*#__PURE__*/_jsxDEV(\"selbox\", {\n                    lData: lData\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 47\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(CFormLabel, {\n                  htmlFor: \"floatingSelectGrid\",\n                  children: \"Facility Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CButton, {\n            type: \"submit\",\n            onClick: () => addToast(confirmationToast),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CToaster, {\n            ref: toaster,\n            push: toast,\n            placement: \"top-end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(requestService, \"aKd+QnVhQgm+ROKuKn5vZ/BCnxs=\");\n\nexport default requestService;","map":{"version":3,"sources":["/Users/hrishikeshmahajan/UFL/SE/SE-Project/new-frontend/src/views/tenantRequests/requestService/index.js"],"names":["React","lazy","useState","useEffect","useRef","CButton","CCard","CCardTitle","CCardBody","CCol","CFormFloating","CFormInput","CFormLabel","CFormSelect","CRow","CForm","CToast","CToaster","CToastBody","CToastClose","selbox","requestService","props","data","setData","maintenanceData","setMaintenanceData","getData","fetch","then","response","console","log","json","myJSON","JSON","stringify","getMaintenance","padTo2Digits","num","toString","padStart","formatDate","date","getDate","getMonth","getFullYear","join","fName","setFName","issueDesc","setIssueDesc","handleSubmit","e","preventDefault","x","Date","created_on","info","email","headers","method","body","toast","addToast","toaster","confirmationToast","gutter","target","value","lData"],"mappings":"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","sourcesContent":["import React, { lazy, useState, useEffect, useRef} from 'react'\n\nimport {\n    CButton,\n    CCard,\n    CCardTitle,\n    CCardBody,\n    CCol,\n    CFormFloating,\n    CFormInput,\n    CFormLabel,\n    CFormSelect,\n    CRow,\n    CForm,\n    CToast,\n    CToaster,\n    CToastBody,\n    CToastClose,\n\n  } from '@coreui/react'\n\n  import selbox  from './sel';\n\n\nconst requestService = (props) => {\n\n    const [data, setData] = useState(null);\n    const [maintenanceData, setMaintenanceData] = useState(null);\n    \n    const getData = () => {\n\n        fetch(\"http://localhost:8080/api/maintenance-request\").then(function (response) {\n        console.log(response);\n        return response.json();\n        }).then(function(myJSON){\n        console.log(myJSON);\n        setData(JSON.stringify(myJSON));\n        })\n    }\n\n    const getMaintenance = () => {\n        fetch(\"http://localhost:8080/api/get-maintenance-personnel\").then(function (response) {\n        console.log(response);\n        return response.json();\n        }).then(function(myJSON){\n        console.log(myJSON);\n        setMaintenanceData(JSON.stringify(myJSON));\n        })\n    }\n    useEffect(() => {\n        getData()\n        getMaintenance()\n    },[])\n\n\n//   const [lData, setLData] = useState();\n//   const getData = (email) => {\n//     console.log(email); \n//     (\n//         async () => {\n//             const resp = await fetch(\"http://localhost:8080/api/getUnit\", {\n//                 method:\"POST\",\n//                 headers: {'Content-Type':'application/json'},\n//                 body: JSON.stringify({\n//                     email\n//                 })\n//         })\n//         const content = await resp.json()\n//         console.log(content)\n//         setLData(content)\n//     }\n//     )();\n//   }\n\n\n  function padTo2Digits(num) {\n    return num.toString().padStart(2, '0');\n  }\n  \n  function formatDate(date) {\n    return [\n      padTo2Digits(date.getDate()),\n      padTo2Digits(date.getMonth() + 1),\n      date.getFullYear(),\n    ].join('-');\n  }\n  \n\n//   const [name, setName] = useState('');\n//   const [type, setType] = useState('');\n//   const [email, setEmail] = useState('');\n//   useEffect(() => {\n//       (\n//           async () => {\n//               const response = await fetch('http://localhost:8080/api/user', {\n//                   headers: {'Content-Type':'application/json'},\n//                   credentials:'include'\n//               });\n//               const content = await response.json();\n//               setName(content.name);\n//               setType(content.type);\n//               setEmail(content.email);\n//               getData(content.email);\n//           }\n//       )();\n      \n//   });\n\n  const[fName, setFName] = useState('');\n  const[issueDesc, setIssueDesc] = useState('');\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      var x = new Date();\n      var created_on = formatDate(x);\n      const info = {email, fName, issueDesc, created_on};\n\n      fetch('http://localhost:8080/api/create-maintenance-request', {\n        headers: {'Content-Type': 'application/json'},\n          method:'POST',\n          body: JSON.stringify(info)\n      }).then(() => {\n          console.log(info);\n      })\n  }\n\n    // const [toast, addToast] = useState(0)\n    // const toaster = useRef()\n    // const confirmationToast = (\n    //     <CToast color=\"success\" className=\"text-white align-items-center\">\n    //         <div className=\"d-flex\">\n    //             <CToastBody>Apartment number {apt_no} added successfully!</CToastBody>\n    //             <CToastClose className=\"me-2 m-auto\" white />\n    //         </div>\n    //     </CToast>\n    // )\n    const [toast, addToast] = useState(0)\n    const toaster = useRef()\n    const confirmationToast = (\n        <CToast color=\"success\" className=\"text-white align-items-center\">\n            <div className=\"d-flex\">\n                <CToastBody>Maintenance request generated successfully!</CToastBody>\n                <CToastClose className=\"me-2 m-auto\" white />\n            </div>\n        </CToast>\n    )\n  return (\n    <div>\n        <h2>Request Service</h2>\n        <CCard >\n            <CCardBody>\n                <CCardTitle>Fill maintenance request details</CCardTitle>\n                    <CForm onSubmit={handleSubmit}>\n                        <CRow xs={{gutter: 2}} className=\"mb-3\">\n                            <CCol md>\n                                <CFormFloating >\n                                    <CFormInput onChange={(e) => setIssueDesc(e.target.value)} type=\"text\" id=\"issueDesc\"/>\n                                    <CFormLabel htmlFor=\"issueDesc\">Issue Description</CFormLabel>\n                                </CFormFloating>\n                            </CCol>\n                            <CCol md>\n                            <CFormFloating>\n                                <CFormSelect onChange={(e) => setFName(e.target.value)} id=\"furniture\">\n                                    {lData && <selbox lData={lData}/>}\n                                </CFormSelect>\n                                <CFormLabel htmlFor=\"floatingSelectGrid\">Facility Name</CFormLabel>\n                            </CFormFloating>\n                            </CCol>\n                        </CRow>\n                        <CButton type=\"submit\" onClick={() => addToast(confirmationToast)}>Submit</CButton>\n                        <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n                    </CForm>\n            </CCardBody>\n        </CCard>\n    </div>\n  )\n}\n\nexport default requestService;\n"]},"metadata":{},"sourceType":"module"}