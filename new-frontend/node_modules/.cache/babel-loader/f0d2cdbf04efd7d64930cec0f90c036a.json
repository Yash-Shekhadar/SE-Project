{"ast":null,"code":"var _jsxFileName = \"/Users/hismajesty/Desktop/SE-Project/new-frontend/src/views/manageMaintenance/managePersonnel/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy } from 'react';\nimport { useState } from 'react';\nimport { CAvatar, CButton, CButtonGroup, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CProgress, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow, CContainer, CForm, CImage, CInputGroup, CInputGroupText, CFormInput } from '@coreui/react';\nimport { CChartLine } from '@coreui/react-chartjs';\nimport { getStyle, hexToRgba } from '@coreui/utils';\nimport CIcon from '@coreui/icons-react';\nimport { cibCcAmex, cibCcApplePay, cibCcMastercard, cibCcPaypal, cibCcStripe, cibCcVisa, cibGoogle, cibFacebook, cibLinkedin, cifBr, cifEs, cifFr, cifIn, cifPl, cifUs, cibTwitter, cilCloudDownload, cilPeople, cilUser, cilUserFemale, cilCalendar } from '@coreui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst addPersonnel = () => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [type, setType] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  const submit = async e => {\n    e.preventDefault();\n    await fetch('http://localhost:8080/api/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        type,\n        password\n      })\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Personnel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CForm, {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-medium-emphasis\",\n        children: \"Add New Maintenance Personnel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CInputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(CInputGroupText, {\n          children: /*#__PURE__*/_jsxDEV(CIcon, {\n            icon: cilUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n          onChange: e => setName(e.target.value),\n          placeholder: \"First Name\",\n          autoComplete: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CInputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(CInputGroupText, {\n          children: \"@\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"Email\",\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CInputGroup, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(CInputGroupText, {\n          children: /*#__PURE__*/_jsxDEV(CIcon, {\n            icon: cilCalendar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(CFormInput, {\n          onChange: e => setPassword(e.target.value),\n          placeholder: \"Password\",\n          autoComplete: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid\",\n        children: /*#__PURE__*/_jsxDEV(CButton, {\n          type: \"submit\",\n          color: \"success\",\n          children: \"Add Personnel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n};\n/* <div className=\"form-floating\">\n                <input type=\"text\" className=\"form-control\" id=\"floatingInput\" placeholder=\"Type\"\n                    onChange={e => setType(e.target.value)}\n                />\n                <label for=\"floatingInput\">Type</label>\n                </div> */\n\n\n_s(addPersonnel, \"WsWK/sYb2ezUxLAv/2lpgDF9xvg=\");\n\nexport default addPersonnel;","map":{"version":3,"sources":["/Users/hismajesty/Desktop/SE-Project/new-frontend/src/views/manageMaintenance/managePersonnel/index.js"],"names":["React","lazy","useState","CAvatar","CButton","CButtonGroup","CCard","CCardBody","CCardFooter","CCardHeader","CCol","CProgress","CRow","CTable","CTableBody","CTableDataCell","CTableHead","CTableHeaderCell","CTableRow","CContainer","CForm","CImage","CInputGroup","CInputGroupText","CFormInput","CChartLine","getStyle","hexToRgba","CIcon","cibCcAmex","cibCcApplePay","cibCcMastercard","cibCcPaypal","cibCcStripe","cibCcVisa","cibGoogle","cibFacebook","cibLinkedin","cifBr","cifEs","cifFr","cifIn","cifPl","cifUs","cibTwitter","cilCloudDownload","cilPeople","cilUser","cilUserFemale","cilCalendar","addPersonnel","name","setName","email","setEmail","password","setPassword","type","setType","redirect","setRedirect","submit","e","preventDefault","fetch","method","headers","body","JSON","stringify","target","value"],"mappings":"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","sourcesContent":["import React, { lazy } from 'react'\nimport { useState } from 'react'\nimport {\n    CAvatar,\n    CButton,\n    CButtonGroup,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CProgress,\n    CRow,\n    CTable,\n    CTableBody,\n    CTableDataCell,\n    CTableHead,\n    CTableHeaderCell,\n    CTableRow,\n    CContainer,\n    CForm,\n    CImage,\n    CInputGroup,\n    CInputGroupText,\n    CFormInput,\n  } from '@coreui/react'\n\n  import { CChartLine } from '@coreui/react-chartjs'\n  import { getStyle, hexToRgba } from '@coreui/utils'\n  import CIcon from '@coreui/icons-react'\n  import {\n    cibCcAmex,\n    cibCcApplePay,\n    cibCcMastercard,\n    cibCcPaypal,\n    cibCcStripe,\n    cibCcVisa,\n    cibGoogle,\n    cibFacebook,\n    cibLinkedin,\n    cifBr,\n    cifEs,\n    cifFr,\n    cifIn,\n    cifPl,\n    cifUs,\n    cibTwitter,\n    cilCloudDownload,\n    cilPeople,\n    cilUser,\n    cilUserFemale,\n    cilCalendar,\n  } from '@coreui/icons'\n\n\n\n  const addPersonnel = () => {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [type, setType] = useState('');\n    const [redirect, setRedirect] = useState(false);\n\n    const submit = async (e) => {\n        e.preventDefault();\n        await fetch('http://localhost:8080/api/register', {\n            method:'POST',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify({\n                name, email, type, password\n            })\n        });\n        \n    }\n  \n    return (\n      <div>\n        <h2>Add Personnel</h2>\n                  <CForm onSubmit={submit}>\n                    <p className=\"text-medium-emphasis\">Add New Maintenance Personnel</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput onChange={(e) => setName(e.target.value)} placeholder=\"First Name\" autoComplete=\"First Name\" />\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>@</CInputGroupText>\n                      <CFormInput onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" autoComplete=\"email\" />\n                    </CInputGroup>\n\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilCalendar} />\n                      </CInputGroupText>\n                      <CFormInput onChange={(e) => setPassword(e.target.value)}  placeholder='Password' autoComplete=\"password\" />\n                    </CInputGroup>\n\n\n                    <div className=\"d-grid\">\n                      <CButton type='submit' color=\"success\">Add Personnel</CButton>\n                    </div>\n                  </CForm>\n                \n      </div>\n    )\n  }\n/* <div className=\"form-floating\">\n                <input type=\"text\" className=\"form-control\" id=\"floatingInput\" placeholder=\"Type\"\n                    onChange={e => setType(e.target.value)}\n                />\n                <label for=\"floatingInput\">Type</label>\n                </div> */\nexport default addPersonnel;\n"]},"metadata":{},"sourceType":"module"}