{"ast":null,"code":"var $ = require('../internals/export');\n\nvar getCompositeKeyNode = require('../internals/composite-key');\n\nvar getBuiltIn = require('../internals/get-built-in');\n\nvar apply = require('../internals/function-apply'); // https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey\n\n\n$({\n  global: true\n}, {\n  compositeSymbol: function compositeSymbol() {\n    if (arguments.length == 1 && typeof arguments[0] == 'string') return getBuiltIn('Symbol')['for'](arguments[0]);\n    return apply(getCompositeKeyNode, null, arguments).get('symbol', getBuiltIn('Symbol'));\n  }\n});","map":{"version":3,"sources":["D:/University of Florida/Spring 22/Software Engineering/project/SE-Project/new-frontend/node_modules/core-js/modules/esnext.composite-symbol.js"],"names":["$","require","getCompositeKeyNode","getBuiltIn","apply","global","compositeSymbol","arguments","length","get"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAD,CAAf;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,4BAAD,CAAjC;;AACA,IAAIE,UAAU,GAAGF,OAAO,CAAC,2BAAD,CAAxB;;AACA,IAAIG,KAAK,GAAGH,OAAO,CAAC,6BAAD,CAAnB,C,CAEA;;;AACAD,CAAC,CAAC;AAAEK,EAAAA,MAAM,EAAE;AAAV,CAAD,EAAmB;AAClBC,EAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,QAAIC,SAAS,CAACC,MAAV,IAAoB,CAApB,IAAyB,OAAOD,SAAS,CAAC,CAAD,CAAhB,IAAuB,QAApD,EAA8D,OAAOJ,UAAU,CAAC,QAAD,CAAV,CAAqB,KAArB,EAA4BI,SAAS,CAAC,CAAD,CAArC,CAAP;AAC9D,WAAOH,KAAK,CAACF,mBAAD,EAAsB,IAAtB,EAA4BK,SAA5B,CAAL,CAA4CE,GAA5C,CAAgD,QAAhD,EAA0DN,UAAU,CAAC,QAAD,CAApE,CAAP;AACD;AAJiB,CAAnB,CAAD","sourcesContent":["var $ = require('../internals/export');\r\nvar getCompositeKeyNode = require('../internals/composite-key');\r\nvar getBuiltIn = require('../internals/get-built-in');\r\nvar apply = require('../internals/function-apply');\r\n\r\n// https://github.com/tc39/proposal-richer-keys/tree/master/compositeKey\r\n$({ global: true }, {\r\n  compositeSymbol: function compositeSymbol() {\r\n    if (arguments.length == 1 && typeof arguments[0] == 'string') return getBuiltIn('Symbol')['for'](arguments[0]);\r\n    return apply(getCompositeKeyNode, null, arguments).get('symbol', getBuiltIn('Symbol'));\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}