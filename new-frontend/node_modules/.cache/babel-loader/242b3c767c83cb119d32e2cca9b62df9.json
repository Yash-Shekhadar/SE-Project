{"ast":null,"code":"/**\n * @cypress/react v0.0.0-development\n * (c) 2022 Cypress.io\n * Released under the MIT License\n */\nimport { createElement, StrictMode, Fragment } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ROOT_ID, injectStylesBeforeElement, setupHooks } from '@cypress/mount-utils';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar cachedDisplayNames = new WeakMap();\n/**\r\n * Gets the display name of the component when possible.\r\n * @param type {JSX} The type object returned from creating the react element.\r\n * @param fallbackName {string} The alias, or fallback name to use when the name cannot be derived.\r\n * @link https://github.com/facebook/react-devtools/blob/master/backend/getDisplayName.js\r\n */\n\nfunction getDisplayName(type, fallbackName) {\n  if (fallbackName === void 0) {\n    fallbackName = 'Unknown';\n  }\n\n  var nameFromCache = cachedDisplayNames.get(type);\n\n  if (nameFromCache != null) {\n    return nameFromCache;\n  }\n\n  var displayName = null; // The displayName property is not guaranteed to be a string.\n  // It's only safe to use for our purposes if it's a string.\n  // github.com/facebook/react-devtools/issues/803\n\n  if (typeof type.displayName === 'string') {\n    displayName = type.displayName;\n  }\n\n  if (!displayName) {\n    displayName = type.name || fallbackName;\n  } // Facebook-specific hack to turn \"Image [from Image.react]\" into just \"Image\".\n  // We need displayName with module name for error reports but it clutters the DevTools.\n\n\n  var match = displayName.match(/^(.*) \\[from (.*)\\]$/);\n\n  if (match) {\n    var componentName = match[1];\n    var moduleName = match[2];\n\n    if (componentName && moduleName) {\n      if (moduleName === componentName || moduleName.startsWith(componentName + \".\")) {\n        displayName = componentName;\n      }\n    }\n  }\n\n  try {\n    cachedDisplayNames.set(type, displayName);\n  } catch (e) {// do nothing\n  }\n\n  return displayName;\n}\n/**\r\n * Inject custom style text or CSS file or 3rd party style resources\r\n */\n\n\nvar injectStyles = function (options) {\n  return function () {\n    var el = document.getElementById(ROOT_ID);\n    return injectStylesBeforeElement(options, document, el);\n  };\n};\n/**\r\n * Mount a React component in a blank document; register it as an alias\r\n * To access: use an alias or original component reference\r\n * @function   mount\r\n * @param      {React.ReactElement}  jsx - component to mount\r\n * @param      {MountOptions}  [options] - options, like alias, styles\r\n * @see https://github.com/bahmutov/@cypress/react\r\n * @see https://glebbahmutov.com/blog/my-vision-for-component-tests/\r\n * @example\r\n ```\r\n  import Hello from './hello.jsx'\r\n  import { mount } from '@cypress/react'\r\n  it('works', () => {\r\n    mount(<Hello onClick={cy.stub()} />)\r\n    // use Cypress commands\r\n    cy.contains('Hello').click()\r\n  })\r\n ```\r\n **/\n\n\nvar mount = function (jsx, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return _mount('mount', jsx, options);\n};\n\nvar lastMountedReactDom;\n/**\r\n * @see `mount`\r\n * @param type The type of mount executed\r\n * @param rerenderKey If specified, use the provided key rather than generating a new one\r\n */\n\nvar _mount = function (type, jsx, options, rerenderKey) {\n  if (options === void 0) {\n    options = {};\n  } // Get the display name property via the component constructor\n  // @ts-ignore FIXME\n\n\n  var componentName = getDisplayName(jsx.type, options.alias);\n  var displayName = options.alias || componentName;\n  var jsxComponentName = \"<\" + componentName + \" ... />\";\n  var message = options.alias ? jsxComponentName + \" as \\\"\" + options.alias + \"\\\"\" : jsxComponentName;\n  return cy.then(injectStyles(options)).then(function () {\n    var _a, _b, _c;\n\n    var reactDomToUse = options.ReactDom || ReactDOM;\n    lastMountedReactDom = reactDomToUse;\n    var el = document.getElementById(ROOT_ID);\n\n    if (!el) {\n      throw new Error(['[@cypress/react] ðŸ”¥ Hmm, cannot find root element to mount the component.'].join(' '));\n    }\n\n    var key = rerenderKey !== null && rerenderKey !== void 0 ? rerenderKey : // @ts-ignore provide unique key to the the wrapped component to make sure we are rerendering between tests\n    (((_c = (_b = (_a = Cypress === null || Cypress === void 0 ? void 0 : Cypress.mocha) === null || _a === void 0 ? void 0 : _a.getRunner()) === null || _b === void 0 ? void 0 : _b.test) === null || _c === void 0 ? void 0 : _c.title) || '') + Math.random();\n    var props = {\n      key: key\n    };\n    var reactComponent = createElement(options.strict ? StrictMode : Fragment, props, jsx); // since we always surround the component with a fragment\n    // let's get back the original component\n\n    var userComponent = reactComponent.props.children;\n    reactDomToUse.render(reactComponent, el);\n\n    if (options.log !== false) {\n      Cypress.log({\n        name: type,\n        type: 'parent',\n        message: [message],\n        $el: el.children.item(0),\n        consoleProps: function () {\n          return {\n            // @ts-ignore protect the use of jsx functional components use ReactNode\n            props: jsx.props,\n            description: type === 'mount' ? 'Mounts React component' : 'Rerenders mounted React component',\n            home: 'https://github.com/cypress-io/cypress'\n          };\n        }\n      }).snapshot('mounted').end();\n    }\n\n    return (// Separate alias and returned value. Alias returns the component only, and the thenable returns the additional functions\n      cy.wrap(userComponent, {\n        log: false\n      }).as(displayName).then(function () {\n        return cy.wrap({\n          component: userComponent,\n          rerender: function (newComponent) {\n            return _mount('rerender', newComponent, options, key);\n          },\n          unmount: function () {\n            return _unmount({\n              boundComponentMessage: jsxComponentName,\n              log: true\n            });\n          }\n        }, {\n          log: false\n        });\n      }) // by waiting, we delaying test execution for the next tick of event loop\n      // and letting hooks and component lifecycle methods to execute mount\n      // https://github.com/bahmutov/cypress-react-unit-test/issues/200\n      .wait(0, {\n        log: false\n      })\n    ); // Bluebird types are terrible. I don't think the return type can be carried without this cast\n  });\n};\n/**\r\n * Removes the mounted component. Notice this command automatically\r\n * queues up the `unmount` into Cypress chain, thus you don't need `.then`\r\n * to call it.\r\n * @see https://github.com/cypress-io/cypress/tree/develop/npm/react/cypress/component/basic/unmount\r\n * @example\r\n  ```\r\n  import { mount, unmount } from '@cypress/react'\r\n  it('works', () => {\r\n    mount(...)\r\n    // interact with the component using Cypress commands\r\n    // whenever you want to unmount\r\n    unmount()\r\n  })\r\n  ```\r\n */\n\n\nvar unmount = function (options) {\n  if (options === void 0) {\n    options = {\n      log: true\n    };\n  }\n\n  return _unmount(options);\n};\n\nvar _unmount = function (options) {\n  return cy.then(function () {\n    var selector = \"#\" + ROOT_ID;\n    return cy.get(selector, {\n      log: false\n    }).then(function ($el) {\n      var _a;\n\n      if (lastMountedReactDom) {\n        var wasUnmounted = lastMountedReactDom.unmountComponentAtNode($el[0]);\n\n        if (wasUnmounted && options.log) {\n          Cypress.log({\n            name: 'unmount',\n            type: 'parent',\n            message: [(_a = options.boundComponentMessage) !== null && _a !== void 0 ? _a : 'Unmounted component'],\n            consoleProps: function () {\n              return {\n                description: 'Unmounts React component',\n                parent: $el[0],\n                home: 'https://github.com/cypress-io/cypress'\n              };\n            }\n          });\n        }\n      }\n    });\n  });\n}; // Cleanup before each run\n// NOTE: we cannot use unmount here because\n// we are not in the context of a test\n\n\nvar preMountCleanup = function () {\n  var el = document.getElementById(ROOT_ID);\n\n  if (el && lastMountedReactDom) {\n    lastMountedReactDom.unmountComponentAtNode(el);\n  }\n};\n/**\r\n * Creates new instance of `mount` function with default options\r\n * @function   createMount\r\n * @param      {MountOptions}  [defaultOptions] - defaultOptions for returned `mount` function\r\n * @returns    new instance of `mount` with assigned options\r\n * @example\r\n * ```\r\n * import Hello from './hello.jsx'\r\n * import { createMount } from '@cypress/react'\r\n *\r\n * const mount = createMount({ strict: true, cssFile: 'path/to/any/css/file.css' })\r\n *\r\n * it('works', () => {\r\n *   mount(<Hello />)\r\n *   // use Cypress commands\r\n *   cy.get('button').should('have.css', 'color', 'rgb(124, 12, 109)')\r\n * })\r\n ```\r\n **/\n\n\nvar createMount = function (defaultOptions) {\n  return function (element, options) {\n    return mount(element, __assign(__assign({}, defaultOptions), options));\n  };\n}; // it is required to unmount component in beforeEach hook in order to provide a clean state inside test\n// because `mount` can be called after some preparation that can side effect unmount\n// @see npm/react/cypress/component/advanced/set-timeout-example/loading-indicator-spec.js\n\n\nsetupHooks(preMountCleanup); // mounting hooks inside a test component mostly copied from\n// https://github.com/testing-library/react-hooks-testing-library/blob/master/src/pure.js\n\nfunction resultContainer() {\n  var value = null;\n  var error = null;\n  var resolvers = [];\n  var result = {\n    get current() {\n      if (error) {\n        throw error;\n      }\n\n      return value;\n    },\n\n    get error() {\n      return error;\n    }\n\n  };\n\n  var updateResult = function (val, err) {\n    if (err === void 0) {\n      err = null;\n    }\n\n    value = val;\n    error = err;\n    resolvers.splice(0, resolvers.length).forEach(function (resolve) {\n      return resolve();\n    });\n  };\n\n  return {\n    result: result,\n    addResolver: function (resolver) {\n      resolvers.push(resolver);\n    },\n    setValue: function (val) {\n      return updateResult(val);\n    },\n    setError: function (err) {\n      return updateResult(undefined, err);\n    }\n  };\n}\n\nfunction TestHook(_a) {\n  var callback = _a.callback,\n      onError = _a.onError,\n      children = _a.children;\n\n  try {\n    children(callback());\n  } catch (err) {\n    if ('then' in err) {\n      throw err;\n    } else {\n      onError(err);\n    }\n  }\n\n  return null;\n}\n/**\r\n * Mounts a React hook function in a test component for testing.\r\n *\r\n */\n\n\nvar mountHook = function (hookFn) {\n  var _a = resultContainer(),\n      result = _a.result,\n      setValue = _a.setValue,\n      setError = _a.setError;\n\n  var componentTest = createElement(TestHook, {\n    callback: hookFn,\n    onError: setError,\n    children: setValue\n  });\n  return mount(componentTest).then(function () {\n    return result;\n  });\n};\n\nexport { createMount, mount, mountHook, unmount };","map":{"version":3,"sources":["D:/University of Florida/Spring 22/Software Engineering/project/SE-Project/new-frontend/node_modules/@cypress/react/dist/cypress-react.esm-bundler.js"],"names":["createElement","StrictMode","Fragment","ReactDOM","ROOT_ID","injectStylesBeforeElement","setupHooks","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","cachedDisplayNames","WeakMap","getDisplayName","type","fallbackName","nameFromCache","get","displayName","name","match","componentName","moduleName","startsWith","set","e","injectStyles","options","el","document","getElementById","mount","jsx","_mount","lastMountedReactDom","rerenderKey","alias","jsxComponentName","message","cy","then","_a","_b","_c","reactDomToUse","ReactDom","Error","join","key","Cypress","mocha","getRunner","test","title","Math","random","props","reactComponent","strict","userComponent","children","render","log","$el","item","consoleProps","description","home","snapshot","end","wrap","as","component","rerender","newComponent","unmount","_unmount","boundComponentMessage","wait","selector","wasUnmounted","unmountComponentAtNode","parent","preMountCleanup","createMount","defaultOptions","element","resultContainer","value","error","resolvers","result","current","updateResult","val","err","splice","forEach","resolve","addResolver","resolver","push","setValue","setError","undefined","TestHook","callback","onError","mountHook","hookFn","componentTest"],"mappings":"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","sourcesContent":["\n/**\n * @cypress/react v0.0.0-development\n * (c) 2022 Cypress.io\n * Released under the MIT License\n */\n\nimport { createElement, StrictMode, Fragment } from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ROOT_ID, injectStylesBeforeElement, setupHooks } from '@cypress/mount-utils';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar cachedDisplayNames = new WeakMap();\r\n/**\r\n * Gets the display name of the component when possible.\r\n * @param type {JSX} The type object returned from creating the react element.\r\n * @param fallbackName {string} The alias, or fallback name to use when the name cannot be derived.\r\n * @link https://github.com/facebook/react-devtools/blob/master/backend/getDisplayName.js\r\n */\r\nfunction getDisplayName(type, fallbackName) {\r\n    if (fallbackName === void 0) { fallbackName = 'Unknown'; }\r\n    var nameFromCache = cachedDisplayNames.get(type);\r\n    if (nameFromCache != null) {\r\n        return nameFromCache;\r\n    }\r\n    var displayName = null;\r\n    // The displayName property is not guaranteed to be a string.\r\n    // It's only safe to use for our purposes if it's a string.\r\n    // github.com/facebook/react-devtools/issues/803\r\n    if (typeof type.displayName === 'string') {\r\n        displayName = type.displayName;\r\n    }\r\n    if (!displayName) {\r\n        displayName = type.name || fallbackName;\r\n    }\r\n    // Facebook-specific hack to turn \"Image [from Image.react]\" into just \"Image\".\r\n    // We need displayName with module name for error reports but it clutters the DevTools.\r\n    var match = displayName.match(/^(.*) \\[from (.*)\\]$/);\r\n    if (match) {\r\n        var componentName = match[1];\r\n        var moduleName = match[2];\r\n        if (componentName && moduleName) {\r\n            if (moduleName === componentName ||\r\n                moduleName.startsWith(componentName + \".\")) {\r\n                displayName = componentName;\r\n            }\r\n        }\r\n    }\r\n    try {\r\n        cachedDisplayNames.set(type, displayName);\r\n    }\r\n    catch (e) {\r\n        // do nothing\r\n    }\r\n    return displayName;\r\n}\n\n/**\r\n * Inject custom style text or CSS file or 3rd party style resources\r\n */\r\nvar injectStyles = function (options) {\r\n    return function () {\r\n        var el = document.getElementById(ROOT_ID);\r\n        return injectStylesBeforeElement(options, document, el);\r\n    };\r\n};\r\n/**\r\n * Mount a React component in a blank document; register it as an alias\r\n * To access: use an alias or original component reference\r\n * @function   mount\r\n * @param      {React.ReactElement}  jsx - component to mount\r\n * @param      {MountOptions}  [options] - options, like alias, styles\r\n * @see https://github.com/bahmutov/@cypress/react\r\n * @see https://glebbahmutov.com/blog/my-vision-for-component-tests/\r\n * @example\r\n ```\r\n  import Hello from './hello.jsx'\r\n  import { mount } from '@cypress/react'\r\n  it('works', () => {\r\n    mount(<Hello onClick={cy.stub()} />)\r\n    // use Cypress commands\r\n    cy.contains('Hello').click()\r\n  })\r\n ```\r\n **/\r\nvar mount = function (jsx, options) {\r\n    if (options === void 0) { options = {}; }\r\n    return _mount('mount', jsx, options);\r\n};\r\nvar lastMountedReactDom;\r\n/**\r\n * @see `mount`\r\n * @param type The type of mount executed\r\n * @param rerenderKey If specified, use the provided key rather than generating a new one\r\n */\r\nvar _mount = function (type, jsx, options, rerenderKey) {\r\n    if (options === void 0) { options = {}; }\r\n    // Get the display name property via the component constructor\r\n    // @ts-ignore FIXME\r\n    var componentName = getDisplayName(jsx.type, options.alias);\r\n    var displayName = options.alias || componentName;\r\n    var jsxComponentName = \"<\" + componentName + \" ... />\";\r\n    var message = options.alias\r\n        ? jsxComponentName + \" as \\\"\" + options.alias + \"\\\"\"\r\n        : jsxComponentName;\r\n    return cy\r\n        .then(injectStyles(options))\r\n        .then(function () {\r\n        var _a, _b, _c;\r\n        var reactDomToUse = options.ReactDom || ReactDOM;\r\n        lastMountedReactDom = reactDomToUse;\r\n        var el = document.getElementById(ROOT_ID);\r\n        if (!el) {\r\n            throw new Error([\r\n                '[@cypress/react] ðŸ”¥ Hmm, cannot find root element to mount the component.',\r\n            ].join(' '));\r\n        }\r\n        var key = rerenderKey !== null && rerenderKey !== void 0 ? rerenderKey : \r\n        // @ts-ignore provide unique key to the the wrapped component to make sure we are rerendering between tests\r\n        (((_c = (_b = (_a = Cypress === null || Cypress === void 0 ? void 0 : Cypress.mocha) === null || _a === void 0 ? void 0 : _a.getRunner()) === null || _b === void 0 ? void 0 : _b.test) === null || _c === void 0 ? void 0 : _c.title) || '') + Math.random();\r\n        var props = {\r\n            key: key,\r\n        };\r\n        var reactComponent = createElement(options.strict ? StrictMode : Fragment, props, jsx);\r\n        // since we always surround the component with a fragment\r\n        // let's get back the original component\r\n        var userComponent = reactComponent.props.children;\r\n        reactDomToUse.render(reactComponent, el);\r\n        if (options.log !== false) {\r\n            Cypress.log({\r\n                name: type,\r\n                type: 'parent',\r\n                message: [message],\r\n                $el: el.children.item(0),\r\n                consoleProps: function () {\r\n                    return {\r\n                        // @ts-ignore protect the use of jsx functional components use ReactNode\r\n                        props: jsx.props,\r\n                        description: type === 'mount' ? 'Mounts React component' : 'Rerenders mounted React component',\r\n                        home: 'https://github.com/cypress-io/cypress',\r\n                    };\r\n                },\r\n            }).snapshot('mounted').end();\r\n        }\r\n        return (\r\n        // Separate alias and returned value. Alias returns the component only, and the thenable returns the additional functions\r\n        cy.wrap(userComponent, { log: false })\r\n            .as(displayName)\r\n            .then(function () {\r\n            return cy.wrap({\r\n                component: userComponent,\r\n                rerender: function (newComponent) { return _mount('rerender', newComponent, options, key); },\r\n                unmount: function () { return _unmount({ boundComponentMessage: jsxComponentName, log: true }); },\r\n            }, { log: false });\r\n        })\r\n            // by waiting, we delaying test execution for the next tick of event loop\r\n            // and letting hooks and component lifecycle methods to execute mount\r\n            // https://github.com/bahmutov/cypress-react-unit-test/issues/200\r\n            .wait(0, { log: false }));\r\n        // Bluebird types are terrible. I don't think the return type can be carried without this cast\r\n    });\r\n};\r\n/**\r\n * Removes the mounted component. Notice this command automatically\r\n * queues up the `unmount` into Cypress chain, thus you don't need `.then`\r\n * to call it.\r\n * @see https://github.com/cypress-io/cypress/tree/develop/npm/react/cypress/component/basic/unmount\r\n * @example\r\n  ```\r\n  import { mount, unmount } from '@cypress/react'\r\n  it('works', () => {\r\n    mount(...)\r\n    // interact with the component using Cypress commands\r\n    // whenever you want to unmount\r\n    unmount()\r\n  })\r\n  ```\r\n */\r\nvar unmount = function (options) {\r\n    if (options === void 0) { options = { log: true }; }\r\n    return _unmount(options);\r\n};\r\nvar _unmount = function (options) {\r\n    return cy.then(function () {\r\n        var selector = \"#\" + ROOT_ID;\r\n        return cy.get(selector, { log: false }).then(function ($el) {\r\n            var _a;\r\n            if (lastMountedReactDom) {\r\n                var wasUnmounted = lastMountedReactDom.unmountComponentAtNode($el[0]);\r\n                if (wasUnmounted && options.log) {\r\n                    Cypress.log({\r\n                        name: 'unmount',\r\n                        type: 'parent',\r\n                        message: [(_a = options.boundComponentMessage) !== null && _a !== void 0 ? _a : 'Unmounted component'],\r\n                        consoleProps: function () {\r\n                            return {\r\n                                description: 'Unmounts React component',\r\n                                parent: $el[0],\r\n                                home: 'https://github.com/cypress-io/cypress',\r\n                            };\r\n                        },\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    });\r\n};\r\n// Cleanup before each run\r\n// NOTE: we cannot use unmount here because\r\n// we are not in the context of a test\r\nvar preMountCleanup = function () {\r\n    var el = document.getElementById(ROOT_ID);\r\n    if (el && lastMountedReactDom) {\r\n        lastMountedReactDom.unmountComponentAtNode(el);\r\n    }\r\n};\r\n/**\r\n * Creates new instance of `mount` function with default options\r\n * @function   createMount\r\n * @param      {MountOptions}  [defaultOptions] - defaultOptions for returned `mount` function\r\n * @returns    new instance of `mount` with assigned options\r\n * @example\r\n * ```\r\n * import Hello from './hello.jsx'\r\n * import { createMount } from '@cypress/react'\r\n *\r\n * const mount = createMount({ strict: true, cssFile: 'path/to/any/css/file.css' })\r\n *\r\n * it('works', () => {\r\n *   mount(<Hello />)\r\n *   // use Cypress commands\r\n *   cy.get('button').should('have.css', 'color', 'rgb(124, 12, 109)')\r\n * })\r\n ```\r\n **/\r\nvar createMount = function (defaultOptions) {\r\n    return function (element, options) {\r\n        return mount(element, __assign(__assign({}, defaultOptions), options));\r\n    };\r\n};\r\n// it is required to unmount component in beforeEach hook in order to provide a clean state inside test\r\n// because `mount` can be called after some preparation that can side effect unmount\r\n// @see npm/react/cypress/component/advanced/set-timeout-example/loading-indicator-spec.js\r\nsetupHooks(preMountCleanup);\n\n// mounting hooks inside a test component mostly copied from\r\n// https://github.com/testing-library/react-hooks-testing-library/blob/master/src/pure.js\r\nfunction resultContainer() {\r\n    var value = null;\r\n    var error = null;\r\n    var resolvers = [];\r\n    var result = {\r\n        get current() {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            return value;\r\n        },\r\n        get error() {\r\n            return error;\r\n        },\r\n    };\r\n    var updateResult = function (val, err) {\r\n        if (err === void 0) { err = null; }\r\n        value = val;\r\n        error = err;\r\n        resolvers.splice(0, resolvers.length).forEach(function (resolve) { return resolve(); });\r\n    };\r\n    return {\r\n        result: result,\r\n        addResolver: function (resolver) {\r\n            resolvers.push(resolver);\r\n        },\r\n        setValue: function (val) { return updateResult(val); },\r\n        setError: function (err) { return updateResult(undefined, err); },\r\n    };\r\n}\r\nfunction TestHook(_a) {\r\n    var callback = _a.callback, onError = _a.onError, children = _a.children;\r\n    try {\r\n        children(callback());\r\n    }\r\n    catch (err) {\r\n        if ('then' in err) {\r\n            throw err;\r\n        }\r\n        else {\r\n            onError(err);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Mounts a React hook function in a test component for testing.\r\n *\r\n */\r\nvar mountHook = function (hookFn) {\r\n    var _a = resultContainer(), result = _a.result, setValue = _a.setValue, setError = _a.setError;\r\n    var componentTest = createElement(TestHook, {\r\n        callback: hookFn,\r\n        onError: setError,\r\n        children: setValue,\r\n    });\r\n    return mount(componentTest).then(function () { return result; });\r\n};\n\nexport { createMount, mount, mountHook, unmount };\n"]},"metadata":{},"sourceType":"module"}