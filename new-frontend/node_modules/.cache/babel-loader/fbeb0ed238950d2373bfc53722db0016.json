{"ast":null,"code":"var _jsxFileName = \"/Users/hrishikeshmahajan/UFL/SE/SE-Project/new-frontend/src/views/leasing/createLease/modal.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { CCardImage, CCardTitle, CCardText, CAvatar, CButton, CButtonGroup, CCard, CCardBody, CCardFooter, CCardHeader, CCol, CProgress, CRow, CTable, CTableBody, CTableDataCell, CTableHead, CTableHeaderCell, CTableRow, CModal, CModalHeader, CModalTitle, CModalBody, CModalFooter } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LeaseModal = props => {\n  _s();\n\n  const [visible, setVisible] = useState(false); // console.log(\"Ramu\",props.data);\n\n  let mrHistory = [];\n  let idx = 1;\n\n  for (var i in props.data) {\n    if (props.data[i].Facility === props.cardName) {\n      mrHistory.push([idx, props.data[i].Issue_description, props.data[i].Created_on]);\n      idx++;\n    }\n  }\n\n  console.log(mrHistory);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CButton, {\n      onClick: () => setVisible(!visible),\n      children: \"Get Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CModal, {\n      visible: visible,\n      onClose: () => setVisible(false),\n      children: [/*#__PURE__*/_jsxDEV(CModalHeader, {\n        children: /*#__PURE__*/_jsxDEV(CModalTitle, {\n          children: [props.cardName, \" Status\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CModalBody, {\n        children: /*#__PURE__*/_jsxDEV(CTable, {\n          striped: true,\n          children: [/*#__PURE__*/_jsxDEV(CTableHead, {\n            children: /*#__PURE__*/_jsxDEV(CTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n                scope: \"col\",\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n                scope: \"col\",\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n                scope: \"col\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n                scope: \"col\",\n                children: \"Remark\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CTableBody, {\n            children: mrHistory.map(mr => /*#__PURE__*/_jsxDEV(CTableRow, {\n              children: [/*#__PURE__*/_jsxDEV(CTableHeaderCell, {\n                scope: \"row\",\n                className: \"text-center\",\n                children: mr[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n                children: mr[2]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n                children: mr[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)]\n            }, mr, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CModalFooter, {\n        children: /*#__PURE__*/_jsxDEV(CButton, {\n          color: \"secondary\",\n          onClick: () => setVisible(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LeaseModal, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c = LeaseModal;\nexport default LeaseModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeaseModal\");","map":{"version":3,"sources":["/Users/hrishikeshmahajan/UFL/SE/SE-Project/new-frontend/src/views/leasing/createLease/modal.js"],"names":["React","useState","CCardImage","CCardTitle","CCardText","CAvatar","CButton","CButtonGroup","CCard","CCardBody","CCardFooter","CCardHeader","CCol","CProgress","CRow","CTable","CTableBody","CTableDataCell","CTableHead","CTableHeaderCell","CTableRow","CModal","CModalHeader","CModalTitle","CModalBody","CModalFooter","LeaseModal","props","visible","setVisible","mrHistory","idx","i","data","Facility","cardName","push","Issue_description","Created_on","console","log","map","mr"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useState } from \"react\"\n\nimport {\n    CCardImage,\n    CCardTitle,\n    CCardText,\n    CAvatar,\n    CButton,\n    CButtonGroup,\n    CCard,\n    CCardBody,\n    CCardFooter,\n    CCardHeader,\n    CCol,\n    CProgress,\n    CRow,\n    CTable,\n    CTableBody,\n    CTableDataCell,\n    CTableHead,\n    CTableHeaderCell,\n    CTableRow,\n    CModal,\n    CModalHeader,\n    CModalTitle,\n    CModalBody,\n    CModalFooter,\n  } from '@coreui/react'\n\n\n\nconst LeaseModal = (props) =>{\n    const [visible, setVisible] = useState(false)\n    // console.log(\"Ramu\",props.data);\n    let mrHistory = [];\n    let idx = 1;\n    for(var i in props.data)\n    {\n      if (props.data[i].Facility === props.cardName)\n      {\n        mrHistory.push([idx, props.data[i].Issue_description, props.data[i].Created_on]);\n        idx++;\n      }\n    }\n    console.log(mrHistory);\n    return(\n        <>\n            <CButton onClick={() => setVisible(!visible)}>Get Details</CButton>\n            <CModal visible={visible} onClose={() => setVisible(false)}>\n            <CModalHeader>\n                <CModalTitle>{props.cardName} Status</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n            <CTable striped>\n                <CTableHead>\n                <CTableRow>\n                    <CTableHeaderCell scope=\"col\">#</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Date</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Description</CTableHeaderCell>\n                    <CTableHeaderCell scope=\"col\">Remark</CTableHeaderCell>\n                </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                {mrHistory.map(mr=>(\n                    <CTableRow key={mr}>\n                    <CTableHeaderCell scope=\"row\" className=\"text-center\">\n                        {mr[0]}\n                    </CTableHeaderCell>\n                    <CTableDataCell>\n                        {mr[2]}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                        {mr[1]}\n                    </CTableDataCell>\n                    <CTableDataCell>\n                        -\n                    </CTableDataCell>\n                    </CTableRow>\n                ))}\n                </CTableBody>\n            </CTable>\n            </CModalBody>\n            <CModalFooter>\n                <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n                Close\n                </CButton>\n                {/* <CButton color=\"primary\">Save changes</CButton> */}\n            </CModalFooter>\n            </CModal>\n        </>\n    )\n}\nexport default LeaseModal;"]},"metadata":{},"sourceType":"module"}