{"ast":null,"code":"var _jsxFileName = \"D:\\\\University of Florida\\\\Spring 22\\\\Software Engineering\\\\project\\\\SE-Project\\\\new-frontend\\\\src\\\\views\\\\payRent\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useState, useRef, useEffect } from 'react';\nimport { CContainer, CCallout, CButton, CCard, CCardTitle, CCardBody, CCol, CFormFloating, CFormInput, CFormLabel, CFormSelect, CRow, CForm, CToast, CToaster, CToastBody, CToastClose, CBadge } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst payRent = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  var content = null;\n\n  const getUser = () => {\n    (async () => {\n      const response = await fetch('http://localhost:8080/api/user', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      content = await response.json();\n      setEmail(content.email);\n      getData(content.email);\n    })();\n  };\n\n  const [data, setData] = useState(null);\n  const [maintenanceData, setMaintenanceData] = useState(null);\n  const [curr_dues, setCurrDues] = useState([]);\n\n  const getData = email => {\n    console.log(email);\n    fetch(\"http://localhost:8080/api/getDues\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    }).then(function (myJSON) {\n      setData(JSON.stringify(myJSON));\n      setCurrDues(getTotalDues(JSON.stringify(myJSON)));\n    });\n  };\n\n  useEffect(() => {\n    getUser();\n  }, []);\n  const [toast, addToast] = useState(0);\n  const toaster = useRef();\n\n  const confirmationToast = /*#__PURE__*/_jsxDEV(CToast, {\n    color: \"success\",\n    className: \"text-white align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(CToastBody, {\n        children: \"Rent Payment Successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CToastClose, {\n        className: \"me-2 m-auto\",\n        white: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n\n  function getTotalDues(data) {\n    var curr_dues = [];\n    var data = JSON.parse(data);\n\n    for (var i in data) {\n      curr_dues.push(data[i].Amount);\n    } // console.log(curr_dues);\n\n\n    curr_dues = curr_dues.sort();\n    return curr_dues;\n  }\n\n  function padTo2Digits(num) {\n    return num.toString().padStart(2, '0');\n  }\n\n  function formatDate(date) {\n    return [padTo2Digits(date.getDate()), padTo2Digits(date.getMonth() + 1), date.getFullYear()].join('-');\n  }\n\n  const clearDues = () => {\n    var x = new Date();\n    var paid_on = formatDate(x);\n    const info = {\n      email,\n      paid_on\n    };\n    fetch('http://localhost:8080/api/updateRent', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(info)\n    }).then(() => {\n      console.log(info);\n    }); //Raising toast\n\n    addToast(confirmationToast);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      className: \"col-md-4 align-items-center text-center shadow\",\n      children: [/*#__PURE__*/_jsxDEV(CCardTitle, {\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"display-6\",\n          children: \"Balance Due\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: /*#__PURE__*/_jsxDEV(CContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(CCallout, {\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"Rent\", /*#__PURE__*/_jsxDEV(CBadge, {\n                    className: \"mx-1\",\n                    color: \"primary\",\n                    children: curr_dues.length > 0 ? curr_dues[1] : '0.00'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              sm: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(CCallout, {\n                color: \"secondary\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: [\"Utility\", /*#__PURE__*/_jsxDEV(CBadge, {\n                    className: \"mx-1\",\n                    color: \"secondary\",\n                    children: curr_dues.length > 0 ? curr_dues[0] : '0.00'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: /*#__PURE__*/_jsxDEV(CCallout, {\n              color: \"dark\",\n              children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [\"Total\", /*#__PURE__*/_jsxDEV(CBadge, {\n                  className: \"mx-1\",\n                  color: \"dark\",\n                  children: curr_dues.length > 0 ? curr_dues[0] + curr_dues[1] : '0.00'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CRow, {\n            children: [/*#__PURE__*/_jsxDEV(CButton, {\n              color: \"dark\",\n              onClick: clearDues,\n              children: \"Pay Rent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CToaster, {\n              ref: toaster,\n              push: toast,\n              placement: \"top-end\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n\n_s(payRent, \"//iz0eM6dukuD7/eO4frWTH+WL4=\");\n\nexport default payRent;","map":{"version":3,"sources":["D:/University of Florida/Spring 22/Software Engineering/project/SE-Project/new-frontend/src/views/payRent/index.js"],"names":["React","lazy","useState","useRef","useEffect","CContainer","CCallout","CButton","CCard","CCardTitle","CCardBody","CCol","CFormFloating","CFormInput","CFormLabel","CFormSelect","CRow","CForm","CToast","CToaster","CToastBody","CToastClose","CBadge","payRent","props","email","setEmail","content","getUser","response","fetch","headers","credentials","json","getData","data","setData","maintenanceData","setMaintenanceData","curr_dues","setCurrDues","console","log","method","body","JSON","stringify","then","myJSON","getTotalDues","toast","addToast","toaster","confirmationToast","parse","i","push","Amount","sort","padTo2Digits","num","toString","padStart","formatDate","date","getDate","getMonth","getFullYear","join","clearDues","x","Date","paid_on","info","length"],"mappings":"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","sourcesContent":["import React, { lazy, useState, useRef, useEffect} from 'react'\r\n\r\nimport {\r\n    CContainer ,\r\n    CCallout,\r\n    CButton,\r\n    CCard,\r\n    CCardTitle,\r\n    CCardBody,\r\n    CCol,\r\n    CFormFloating,\r\n    CFormInput,\r\n    CFormLabel,\r\n    CFormSelect,\r\n    CRow,\r\n    CForm,\r\n    CToast,\r\n    CToaster,\r\n    CToastBody,\r\n    CToastClose,\r\n    CBadge,\r\n\r\n  } from '@coreui/react'\r\n\r\n\r\nconst payRent = (props) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n    var content = null;\r\n  \r\n    const getUser = () => {\r\n        (\r\n            async () => {\r\n                const response = await fetch('http://localhost:8080/api/user', {\r\n                    headers: {'Content-Type':'application/json'},\r\n                    credentials:'include'\r\n                });\r\n                content = await response.json();\r\n                setEmail(content.email);\r\n                getData(content.email);\r\n            }\r\n        )();\r\n    };\r\n\r\n    const [data, setData] = useState(null);\r\n    const [maintenanceData, setMaintenanceData] = useState(null);\r\n    const [curr_dues, setCurrDues] = useState([]);\r\n    const getData = (email) => {\r\n      console.log(email); \r\n\r\n    fetch(\"http://localhost:8080/api/getDues\", {\r\n        method:\"POST\",\r\n        headers: {'Content-Type':'application/json'},\r\n        body: JSON.stringify({\r\n          email\r\n        })\r\n    }).then(function (response) {\r\n        console.log(response)\r\n        return response.json();\r\n    }).then(function(myJSON){\r\n        setData(JSON.stringify(myJSON));\r\n        setCurrDues(getTotalDues(JSON.stringify(myJSON)));\r\n    })\r\n    }\r\n    \r\n    useEffect(() => {\r\n      getUser()\r\n    },[])\r\n\r\n    const [toast, addToast] = useState(0)\r\n    const toaster = useRef()\r\n    const confirmationToast = (\r\n        <CToast color=\"success\" className=\"text-white align-items-center\">\r\n            <div className=\"d-flex\">\r\n                <CToastBody>Rent Payment Successful!</CToastBody>\r\n                <CToastClose className=\"me-2 m-auto\" white />\r\n            </div>\r\n        </CToast>\r\n    )\r\n\r\n    function getTotalDues(data)\r\n    {\r\n      var curr_dues = [];\r\n      var data = JSON.parse(data)\r\n      for (var i in data)\r\n      {\r\n        curr_dues.push(data[i].Amount)\r\n      }\r\n      // console.log(curr_dues);\r\n      curr_dues = curr_dues.sort();\r\n      return curr_dues\r\n    }\r\n\r\n    function padTo2Digits(num) {\r\n      return num.toString().padStart(2, '0');\r\n    }\r\n    \r\n    function formatDate(date) {\r\n      return [\r\n        padTo2Digits(date.getDate()),\r\n        padTo2Digits(date.getMonth() + 1),\r\n        date.getFullYear(),\r\n      ].join('-');\r\n    }\r\n\r\n    const clearDues = () =>\r\n    {\r\n      var x = new Date();\r\n      var paid_on = formatDate(x);\r\n      const info = {email, paid_on}\r\n\r\n      fetch('http://localhost:8080/api/updateRent', {\r\n        headers: {'Content-Type': 'application/json'},\r\n          method:'POST',\r\n          body: JSON.stringify(info)\r\n      }).then(() => {\r\n          console.log(info);\r\n      })\r\n\r\n      //Raising toast\r\n      addToast(confirmationToast)\r\n\r\n    }\r\n  return (\r\n    <div>\r\n      \r\n      <CCard className='col-md-4 align-items-center text-center shadow'>\r\n        <CCardTitle><h5 className='display-6'>Balance Due</h5></CCardTitle>\r\n        <CCardBody>\r\n          <CContainer>\r\n            <CRow>\r\n              <CCol sm=\"auto\">\r\n              <CCallout color=\"primary\">\r\n                  <h5>Rent \r\n                    <CBadge className='mx-1' color='primary'>\r\n                    {curr_dues.length > 0 ? curr_dues[1] : '0.00'}\r\n                    </CBadge></h5>\r\n                </CCallout>\r\n            </CCol>\r\n              <CCol sm=\"auto\">\r\n                <CCallout color=\"secondary\">\r\n                  <h5>Utility \r\n                    <CBadge className='mx-1' color='secondary'>\r\n                      {curr_dues.length > 0 ? curr_dues[0] : '0.00'}\r\n                    </CBadge></h5>\r\n                </CCallout>\r\n              </CCol>\r\n            </CRow>\r\n            <CRow>\r\n            <CCallout color=\"dark\">\r\n                  <h5>Total \r\n                    <CBadge className='mx-1' color='dark'>\r\n                      {curr_dues.length > 0 ? curr_dues[0]+curr_dues[1] : '0.00'}\r\n                    </CBadge></h5>\r\n                </CCallout>\r\n            </CRow>\r\n            <CRow>\r\n              <CButton color='dark' onClick={clearDues}>Pay Rent</CButton>\r\n              <CToaster ref={toaster} push={toast} placement=\"top-end\" />\r\n            </CRow>\r\n          </CContainer>\r\n        </CCardBody>\r\n      </CCard>\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default payRent;\r\n"]},"metadata":{},"sourceType":"module"}