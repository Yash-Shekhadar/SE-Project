{"ast":null,"code":"var _jsxFileName = \"/Users/hismajesty/Desktop/SE-Project/new-frontend/src/views/tenantRequests/requestService/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useState, useEffect, useRef } from 'react';\nimport { CButton, CCard, CCardTitle, CCardBody, CCol, CFormFloating, CFormInput, CFormLabel, CFormSelect, CRow, CForm, CToast, CToaster, CToastBody, CToastClose } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst requestService = props => {\n  _s();\n\n  function padTo2Digits(num) {\n    return num.toString().padStart(2, '0');\n  }\n\n  function formatDate(date) {\n    return [padTo2Digits(date.getDate()), padTo2Digits(date.getMonth() + 1), date.getFullYear()].join('-');\n  }\n\n  const [name, setName] = useState('');\n  const [type, setType] = useState('');\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    (async () => {\n      const response = await fetch('http://localhost:8080/api/user', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      const content = await response.json();\n      setName(content.name);\n      setType(content.type);\n      setEmail(content.email);\n    })();\n  });\n  const [fName, setFName] = useState('');\n  const [issueDesc, setIssueDesc] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    var x = new Date();\n    var created_on = formatDate(x);\n    const info = {\n      email,\n      fName,\n      issueDesc,\n      created_on\n    };\n    fetch('http://localhost:8080/api/create-maintenance-request', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(info)\n    }).then(() => {\n      console.log(info);\n    });\n  }; // const [toast, addToast] = useState(0)\n  // const toaster = useRef()\n  // const confirmationToast = (\n  //     <CToast color=\"success\" className=\"text-white align-items-center\">\n  //         <div className=\"d-flex\">\n  //             <CToastBody>Apartment number {apt_no} added successfully!</CToastBody>\n  //             <CToastClose className=\"me-2 m-auto\" white />\n  //         </div>\n  //     </CToast>\n  // )\n\n\n  const [toast, addToast] = useState(0);\n  const toaster = useRef();\n\n  const confirmationToast = /*#__PURE__*/_jsxDEV(CToast, {\n    color: \"success\",\n    className: \"text-white align-items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [/*#__PURE__*/_jsxDEV(CToastBody, {\n        children: \"Maintenance request generated successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CToastClose, {\n        className: \"me-2 m-auto\",\n        white: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request Service\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CCard, {\n      children: /*#__PURE__*/_jsxDEV(CCardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CCardTitle, {\n          children: \"Fill maintenance request details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CForm, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(CRow, {\n            xs: {\n              gutter: 2\n            },\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(CCol, {\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(CFormFloating, {\n                children: [/*#__PURE__*/_jsxDEV(CFormInput, {\n                  onChange: e => setIssueDesc(e.target.value),\n                  type: \"text\",\n                  id: \"issueDesc\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CFormLabel, {\n                  htmlFor: \"issueDesc\",\n                  children: \"Issue Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CCol, {\n              md: true,\n              children: /*#__PURE__*/_jsxDEV(CFormFloating, {\n                children: [/*#__PURE__*/_jsxDEV(CFormSelect, {\n                  onChange: e => setFName(e.target.value),\n                  id: \"furniture\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Unit\",\n                    children: \"Unit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Pool\",\n                    children: \"Pool\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Post Boxes\",\n                    children: \"Post Boxes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Gym Equipment\",\n                    children: \"Gym Equipment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Club House\",\n                    children: \"Club House\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Basketball Court\",\n                    children: \"Basketball Court\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Street Lights\",\n                    children: \"Street Lights\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Garbage\",\n                    children: \"Garbage\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Internet\",\n                    children: \"Internet\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Water\",\n                    children: \"Water\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Electricity\",\n                    children: \"Electricity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Sit-out\",\n                    children: \"Sit-out\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Barbeque Deck\",\n                    children: \"Barbeque Deck\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(CFormLabel, {\n                  htmlFor: \"floatingSelectGrid\",\n                  children: \"Facility Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CButton, {\n            type: \"submit\",\n            onClick: () => addToast(confirmationToast),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CToaster, {\n            ref: toaster,\n            push: toast,\n            placement: \"top-end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(requestService, \"R1pN79LY3JgouC93CbPiRUZ42UI=\");\n\nexport default requestService;","map":{"version":3,"sources":["/Users/hismajesty/Desktop/SE-Project/new-frontend/src/views/tenantRequests/requestService/index.js"],"names":["React","lazy","useState","useEffect","useRef","CButton","CCard","CCardTitle","CCardBody","CCol","CFormFloating","CFormInput","CFormLabel","CFormSelect","CRow","CForm","CToast","CToaster","CToastBody","CToastClose","requestService","props","padTo2Digits","num","toString","padStart","formatDate","date","getDate","getMonth","getFullYear","join","name","setName","type","setType","email","setEmail","response","fetch","headers","credentials","content","json","fName","setFName","issueDesc","setIssueDesc","handleSubmit","e","preventDefault","x","Date","created_on","info","method","body","JSON","stringify","then","console","log","toast","addToast","toaster","confirmationToast","gutter","target","value"],"mappings":"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","sourcesContent":["import React, { lazy, useState, useEffect, useRef} from 'react'\n\nimport {\n    CButton,\n    CCard,\n    CCardTitle,\n    CCardBody,\n    CCol,\n    CFormFloating,\n    CFormInput,\n    CFormLabel,\n    CFormSelect,\n    CRow,\n    CForm,\n    CToast,\n    CToaster,\n    CToastBody,\n    CToastClose,\n\n  } from '@coreui/react'\n\n\nconst requestService = (props) => {\n\n  function padTo2Digits(num) {\n    return num.toString().padStart(2, '0');\n  }\n  \n  function formatDate(date) {\n    return [\n      padTo2Digits(date.getDate()),\n      padTo2Digits(date.getMonth() + 1),\n      date.getFullYear(),\n    ].join('-');\n  }\n  \n\n  const [name, setName] = useState('');\n  const [type, setType] = useState('');\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n      (\n          async () => {\n              const response = await fetch('http://localhost:8080/api/user', {\n                  headers: {'Content-Type':'application/json'},\n                  credentials:'include'\n              });\n              const content = await response.json();\n              setName(content.name);\n              setType(content.type);\n              setEmail(content.email);\n          }\n      )();\n  });\n\n  const[fName, setFName] = useState('');\n  const[issueDesc, setIssueDesc] = useState('');\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      var x = new Date();\n      var created_on = formatDate(x);\n      const info = {email, fName, issueDesc, created_on};\n\n      fetch('http://localhost:8080/api/create-maintenance-request', {\n        headers: {'Content-Type': 'application/json'},\n          method:'POST',\n          body: JSON.stringify(info)\n      }).then(() => {\n          console.log(info);\n      })\n  }\n\n    // const [toast, addToast] = useState(0)\n    // const toaster = useRef()\n    // const confirmationToast = (\n    //     <CToast color=\"success\" className=\"text-white align-items-center\">\n    //         <div className=\"d-flex\">\n    //             <CToastBody>Apartment number {apt_no} added successfully!</CToastBody>\n    //             <CToastClose className=\"me-2 m-auto\" white />\n    //         </div>\n    //     </CToast>\n    // )\n    const [toast, addToast] = useState(0)\n    const toaster = useRef()\n    const confirmationToast = (\n        <CToast color=\"success\" className=\"text-white align-items-center\">\n            <div className=\"d-flex\">\n                <CToastBody>Maintenance request generated successfully!</CToastBody>\n                <CToastClose className=\"me-2 m-auto\" white />\n            </div>\n        </CToast>\n    )\n  return (\n    <div>\n        <h2>Request Service</h2>\n        <CCard >\n            <CCardBody>\n                <CCardTitle>Fill maintenance request details</CCardTitle>\n                    <CForm onSubmit={handleSubmit}>\n                        <CRow xs={{gutter: 2}} className=\"mb-3\">\n                            <CCol md>\n                                <CFormFloating >\n                                    <CFormInput onChange={(e) => setIssueDesc(e.target.value)} type=\"text\" id=\"issueDesc\"/>\n                                    <CFormLabel htmlFor=\"issueDesc\">Issue Description</CFormLabel>\n                                </CFormFloating>\n                            </CCol>\n                            <CCol md>\n                            <CFormFloating>\n                                <CFormSelect onChange={(e) => setFName(e.target.value)} id=\"furniture\">\n                                    <option>Select</option>\n                                    <option value=\"Unit\">Unit</option>\n                                    <option value=\"Pool\">Pool</option>\n                                    <option value=\"Post Boxes\">Post Boxes</option>\n                                    <option value=\"Gym Equipment\">Gym Equipment</option>\n                                    <option value=\"Club House\">Club House</option>\n                                    <option value=\"Basketball Court\">Basketball Court</option>\n                                    <option value=\"Street Lights\">Street Lights</option>\n                                    <option value=\"Garbage\">Garbage</option>\n                                    <option value=\"Internet\">Internet</option>\n                                    <option value=\"Water\">Water</option>\n                                    <option value=\"Electricity\">Electricity</option>\n                                    <option value=\"Sit-out\">Sit-out</option>\n                                    <option value=\"Barbeque Deck\">Barbeque Deck</option>\n                                </CFormSelect>\n                                <CFormLabel htmlFor=\"floatingSelectGrid\">Facility Name</CFormLabel>\n                            </CFormFloating>\n                            </CCol>\n                        </CRow>\n                        <CButton type=\"submit\" onClick={() => addToast(confirmationToast)}>Submit</CButton>\n                        <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n                    </CForm>\n            </CCardBody>\n        </CCard>\n    </div>\n  )\n}\n\nexport default requestService;"]},"metadata":{},"sourceType":"module"}