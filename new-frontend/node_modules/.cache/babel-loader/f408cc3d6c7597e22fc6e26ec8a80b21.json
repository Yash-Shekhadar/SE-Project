{"ast":null,"code":"var _jsxFileName = \"/Users/hismajesty/Desktop/SE-Project/new-frontend/src/views/applicants/at.js\",\n    _s = $RefreshSig$();\n\nimport { CTableDataCell, CTableRow, CDropdown, CDropdownItem, CDropdownDivider, CDropdownMenu, CButton, CDropdownToggle } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AT(props) {\n  _s();\n\n  const [decision, setDecision] = useState();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const registrationInfo = {\n      fname,\n      lname,\n      email,\n      dob,\n      \"accepted\": 0\n    };\n    fetch('http://localhost:8080/register', {\n      method: 'POST',\n      mode: 'no-cors',\n      headers: {\n        'Content-Type': 'application/json',\n        'cache-control': 'no-cache',\n        'Access-Control-Request-Headers': '*',\n        'Access-Control-Request-Method': '*'\n      },\n      body: JSON.stringify(registrationInfo)\n    }).then(() => {\n      console.log(registrationInfo);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: JSON.parse(props.tData).map((item, index) => /*#__PURE__*/_jsxDEV(CTableRow, {\n      \"v-for\": \"item in tableItems\",\n      children: [/*#__PURE__*/_jsxDEV(CTableDataCell, {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.Fname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.Lname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.Email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: item.Dob\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CTableDataCell, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(CButton, {\n            color: \"success\",\n            value: item.Email + '1',\n            onClick: e => {\n              setDecision(e.target.value);\n              handleSubmit();\n            },\n            children: \"Accept\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(CButton, {\n            color: \"danger\",\n            value: item.Email + '0',\n            children: \" Reject\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_s(AT, \"Rhv6KWVYjJOa+OdpZ94A2KLYPfk=\");\n\n_c = AT;\nexport default AT;\n\nvar _c;\n\n$RefreshReg$(_c, \"AT\");","map":{"version":3,"sources":["/Users/hismajesty/Desktop/SE-Project/new-frontend/src/views/applicants/at.js"],"names":["CTableDataCell","CTableRow","CDropdown","CDropdownItem","CDropdownDivider","CDropdownMenu","CButton","CDropdownToggle","AT","props","decision","setDecision","useState","handleSubmit","e","preventDefault","registrationInfo","fname","lname","email","dob","fetch","method","mode","headers","body","JSON","stringify","then","console","log","parse","tData","map","item","index","Fname","Lname","Email","Dob","target","value"],"mappings":";;;AAAA,SACIA,cADJ,EAEIC,SAFJ,EAGIC,SAHJ,EAIIC,aAJJ,EAKIC,gBALJ,EAMIC,aANJ,EAOIC,OAPJ,EAQIC,eARJ,QASS,eATT;;;;AAUA,SAASC,EAAT,CAAYC,KAAZ,EAAmB;AAAA;;AACf,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,EAAxC;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,gBAAgB,GAAG;AAACC,MAAAA,KAAD;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,KAAf;AAAsBC,MAAAA,GAAtB;AAA2B,kBAAW;AAAtC,KAAzB;AAEAC,IAAAA,KAAK,CAAC,gCAAD,EAAmC;AACtCC,MAAAA,MAAM,EAAC,MAD+B;AAEtCC,MAAAA,IAAI,EAAE,SAFgC;AAGtCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB,kBAAjB;AACT,yBAAiB,UADR;AAET,0CAAiC,GAFxB;AAGT,yCAAgC;AAHvB,OAH6B;AAOtCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,gBAAf;AAPgC,KAAnC,CAAL,CAQGY,IARH,CAQQ,MAAM;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYd,gBAAZ;AACD,KAVD;AAWD,GAfH;;AAgBA,sBAAO;AAAA,cACNU,IAAI,CAACK,KAAL,CAAWtB,KAAK,CAACuB,KAAjB,EAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAOC,KAAP,kBACzB,QAAC,SAAD;AAAW,eAAM,oBAAjB;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,SAAS,EAAC,aAA1B;AAAA,+BACE;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,cAAD;AAAA,+BACE;AAAA,oBAAMF,IAAI,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,cAAD;AAAA,+BACE;AAAA,oBAAMH,IAAI,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE,QAAC,cAAD;AAAA,+BACE;AAAA,oBAAMJ,IAAI,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE,QAAC,cAAD;AAAA,+BACE;AAAA,kCAAK,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,SAAf;AAAyB,YAAA,KAAK,EAAEL,IAAI,CAACI,KAAL,GAAa,GAA7C;AACJ,YAAA,OAAO,EAAKxB,CAAD,IAAO;AACPH,cAAAA,WAAW,CAACG,CAAC,CAAC0B,MAAF,CAASC,KAAV,CAAX;AACA5B,cAAAA,YAAY;AAAI,aAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAL,eAMZ,QAAC,OAAD;AAAS,YAAA,KAAK,EAAC,QAAf;AAAwB,YAAA,KAAK,EAAEqB,IAAI,CAACI,KAAL,GAAa,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANY;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,OAA2CH,KAA3C;AAAA;AAAA;AAAA;AAAA,YADH;AADM,mBAAP;AA4BH;;GA9CQ3B,E;;KAAAA,E;AAgDT,eAAeA,EAAf","sourcesContent":["import {\n    CTableDataCell,\n    CTableRow,\n    CDropdown,\n    CDropdownItem,\n    CDropdownDivider,\n    CDropdownMenu,\n    CButton,\n    CDropdownToggle\n  } from '@coreui/react'\nfunction AT(props) {\n    const [decision, setDecision] = useState();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const registrationInfo = {fname, lname, email, dob, \"accepted\":0};\n    \n        fetch('http://localhost:8080/register', {\n          method:'POST',\n          mode: 'no-cors',\n          headers: {'Content-Type': 'application/json',\n          'cache-control': 'no-cache',\n          'Access-Control-Request-Headers':'*',\n          'Access-Control-Request-Method':'*' },\n          body: JSON.stringify(registrationInfo)\n        }).then(() => {\n          console.log(registrationInfo);\n        })\n      }\n    return <>\n    {JSON.parse(props.tData).map((item, index) => (\n        <CTableRow v-for=\"item in tableItems\" key={index}>\n          <CTableDataCell className=\"text-center\">\n            <p>{item.Fname}</p>\n          </CTableDataCell>\n          <CTableDataCell>\n            <div>{item.Lname}</div>\n          </CTableDataCell>\n          <CTableDataCell>\n            <div>{item.Email}</div>\n          </CTableDataCell>\n          <CTableDataCell>\n            <div>{item.Dob}</div>\n          </CTableDataCell>\n          <CTableDataCell>\n            <div><CButton color=\"success\" value={item.Email + '1'}\n             onClick = {(e) => {\n                        setDecision(e.target.value);\n                        handleSubmit() }\n                        \n                        } >Accept</CButton>\n<CButton color=\"danger\" value={item.Email + '0'} > Reject</CButton></div>\n          </CTableDataCell>\n         \n        </CTableRow>\n      ))}\n    </>\n}\n\nexport default AT;"]},"metadata":{},"sourceType":"module"}