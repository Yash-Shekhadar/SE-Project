{"ast":null,"code":"var _jsxFileName = \"D:\\\\University of Florida\\\\Spring 22\\\\Software Engineering\\\\project\\\\SE-Project\\\\playground\\\\frontend\\\\src\\\\components\\\\LoggedIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../react-auth0-spa\";\nimport { FiThumbsUp, FiThumbsDown } from \"react-icons/fi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoggedIn = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [voted, setVoted] = useState({\n    \"world-of-authcraft\": \"\",\n    \"ocean-explorer\": \"\",\n    \"dinosaur-park\": \"\",\n    \"cars-vr\": \"\",\n    \"robin-hood\": \"\",\n    \"real-world-vr\": \"\"\n  });\n  const {\n    getTokenSilently,\n    getTokenWithPopup,\n    loading,\n    user,\n    logout,\n    isAuthenticated\n  } = useAuth0();\n  useEffect(() => {\n    const getProducts = async () => {\n      try {\n        const token = await getTokenWithPopup({\n          audience: \"https://golang_auth\"\n        }); // Send a GET request to the server and add the signed in user's\n        // access token in the Authorization header\n\n        const response = await fetch(\"http://localhost:8080/products\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const responseData = await response.json();\n        setProducts(responseData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getProducts();\n  });\n\n  const vote = async (slug, type, index) => {\n    try {\n      const token = await getTokenSilently(); // Send a POST request to the Go server for the selected product\n      // with the vote type\n\n      const response = await fetch(`http://localhost:8080/products/${slug}/feedback`, {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          vote: type\n        })\n      }); // Since this is just for demonstration and we're not actually\n      // persisting this data, we'll just set the product vote status here\n      // if the product exists\n\n      if (response.ok) {\n        setVoted({ ...voted,\n          [slug]: [type]\n        });\n      } else console.log(response.status);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  if (loading || !user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jumbotron text-center mt-5\",\n      children: [isAuthenticated && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"btn btn-primary float-right\",\n        onClick: () => logout(),\n        children: \"Log out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"We R VR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Hi, \", user.name, \"! Below you'll find the latest games that need feedback. Please provide honest feedback so developers can make the best games.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: products.map(function (product, index) {\n          const prodSlug = product.Slug;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: product.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: product.Description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-footer\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => vote(product.Slug, \"Upvoted\", index),\n                  className: \"btn btn-default float-left\",\n                  children: /*#__PURE__*/_jsxDEV(FiThumbsUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted\",\n                  children: voted[prodSlug]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => vote(product.Slug, \"Downvoted\", index),\n                  className: \"btn btn-default float-right\",\n                  children: /*#__PURE__*/_jsxDEV(FiThumbsDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoggedIn, \"rRmLYcwJZ08WLkEqnzAGXsXnUgQ=\", false, function () {\n  return [useAuth0];\n});\n\n_c = LoggedIn;\nexport default LoggedIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoggedIn\");","map":{"version":3,"sources":["D:/University of Florida/Spring 22/Software Engineering/project/SE-Project/playground/frontend/src/components/LoggedIn.js"],"names":["React","useState","useEffect","useAuth0","FiThumbsUp","FiThumbsDown","LoggedIn","products","setProducts","voted","setVoted","getTokenSilently","getTokenWithPopup","loading","user","logout","isAuthenticated","getProducts","token","audience","response","fetch","headers","Authorization","responseData","json","error","console","vote","slug","type","index","method","body","JSON","stringify","ok","log","status","name","map","product","prodSlug","Slug","Name","Description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport { FiThumbsUp, FiThumbsDown } from \"react-icons/fi\";\r\n\r\nconst LoggedIn = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [voted, setVoted] = useState({\r\n    \"world-of-authcraft\": \"\",\r\n    \"ocean-explorer\": \"\",\r\n    \"dinosaur-park\": \"\",\r\n    \"cars-vr\": \"\",\r\n    \"robin-hood\": \"\",\r\n    \"real-world-vr\": \"\",\r\n  });\r\n\r\n  const {\r\n    getTokenSilently,\r\n    getTokenWithPopup,\r\n    loading,\r\n    user,\r\n    logout,\r\n    isAuthenticated,\r\n  } = useAuth0();\r\n\r\n  useEffect(() => {\r\n    const getProducts = async () => {\r\n      try {\r\n        const token = await getTokenWithPopup({\r\n            audience: \"https://golang_auth\"\r\n        });\r\n        // Send a GET request to the server and add the signed in user's\r\n        // access token in the Authorization header\r\n        const response = await fetch(\"http://localhost:8080/products\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        setProducts(responseData);\r\n      } catch (error) {\r\n\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    getProducts();\r\n  });\r\n\r\n  const vote = async (slug, type, index) => {\r\n    try {\r\n      const token = await getTokenSilently();\r\n      // Send a POST request to the Go server for the selected product\r\n      // with the vote type\r\n      const response = await fetch(\r\n        `http://localhost:8080/products/${slug}/feedback`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n          body: JSON.stringify({ vote: type }),\r\n        }\r\n      );\r\n      // Since this is just for demonstration and we're not actually\r\n      // persisting this data, we'll just set the product vote status here\r\n      // if the product exists\r\n      if (response.ok) {\r\n        setVoted({\r\n          ...voted,\r\n          [slug]: [type],\r\n        });\r\n      } else console.log(response.status);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  if (loading || !user) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"jumbotron text-center mt-5\">\r\n        {isAuthenticated && (\r\n          <span\r\n            className=\"btn btn-primary float-right\"\r\n            onClick={() => logout()}\r\n          >\r\n            Log out\r\n          </span>\r\n        )}\r\n        <h1>We R VR</h1>\r\n        <p>\r\n          Hi, {user.name}! Below you'll find the latest games that need\r\n          feedback. Please provide honest feedback so developers can make the\r\n          best games.\r\n        </p>\r\n        <div className=\"row\">\r\n          {products.map(function (product, index) {\r\n            const prodSlug = product.Slug;\r\n            return (\r\n              <div className=\"col-sm-4\" key={index}>\r\n                <div className=\"card mb-4\">\r\n                  <div className=\"card-header\">{product.Name}</div>\r\n                  <div className=\"card-body\">{product.Description}</div>\r\n                  <div className=\"card-footer\">\r\n                    <a onClick={() => vote(product.Slug, \"Upvoted\", index)}\r\n                      className=\"btn btn-default float-left\">\r\n                      <FiThumbsUp />\r\n                    </a>\r\n                    <small className=\"text-muted\">{voted[prodSlug]}</small>\r\n                    <a onClick={() => vote(product.Slug, \"Downvoted\", index)}\r\n                      className=\"btn btn-default float-right\">\r\n                      <FiThumbsDown />\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoggedIn;"]},"metadata":{},"sourceType":"module"}